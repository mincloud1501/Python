import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import assert from './assert';

var ManagedArray = function () {
  function ManagedArray() {
    var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

    _classCallCheck(this, ManagedArray);

    this._array = new Array(length);
    this._length = length;
  }

  _createClass(ManagedArray, [{
    key: "get",
    value: function get(index) {
      assert(index < this._array.length);
      return this._array[index];
    }
  }, {
    key: "set",
    value: function set(index, element) {
      assert(index >= 0);

      if (index >= this.length) {
        this.length = index + 1;
      }

      this._array[index] = element;
    }
  }, {
    key: "peek",
    value: function peek() {
      return this._array[this._length - 1];
    }
  }, {
    key: "push",
    value: function push(element) {
      var index = this.length++;
      this._array[index] = element;
    }
  }, {
    key: "pop",
    value: function pop() {
      return this._array[--this.length];
    }
  }, {
    key: "reserve",
    value: function reserve(length) {
      assert(length >= 0);

      if (length > this._array.length) {
        this._array.length = length;
      }
    }
  }, {
    key: "resize",
    value: function resize(length) {
      assert(length >= 0);
      this.length = length;
    }
  }, {
    key: "trim",
    value: function trim() {
      var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.length;
      this._array.length = length;
    }
  }, {
    key: "length",
    get: function get() {
      return this._length;
    },
    set: function set(length) {
      this._length = length;

      if (length > this._array.length) {
        this._array.length = length;
      }
    }
  }, {
    key: "values",
    get: function get() {
      return this._array;
    }
  }]);

  return ManagedArray;
}();

export { ManagedArray as default };
//# sourceMappingURL=managed-array.js.map