{"version":3,"sources":["../../../src/parsers/parse-3d-tile-batched-model.js"],"names":["parseBatchedModel3DTile","tile","arrayBuffer","byteOffset","options","context","parseBatchedModel","GLTF_FORMAT","EMBEDDED","parseBatchedModel3DTileSync","featureTable","Tile3DFeatureTable","featureTableJson","featureTableBinary","rtcCenter","getGlobalProperty","GL","FLOAT"],"mappings":";;;;;;;;;;;;;;;AAGA;;AACA;;AAGA;;AACA;;AACA;;SAEsBA,uB;;;;;6FAAf,iBAAuCC,IAAvC,EAA6CC,WAA7C,EAA0DC,UAA1D,EAAsEC,OAAtE,EAA+EC,OAA/E;AAAA;AAAA;AAAA;AAAA;AACLF,YAAAA,UAAU,GAAGG,iBAAiB,CAACL,IAAD,EAAOC,WAAP,EAAoBC,UAApB,EAAgCC,OAAhC,EAAyCC,OAAzC,CAA9B;AADK;AAAA,mBAEC,sCAAYJ,IAAZ,EAAkBM,iCAAYC,QAA9B,EAAwCJ,OAAxC,EAAiDC,OAAjD,CAFD;;AAAA;AAAA,6CAGEF,UAHF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAMA,SAASM,2BAAT,CAAqCR,IAArC,EAA2CC,WAA3C,EAAwDC,UAAxD,EAAoEC,OAApE,EAA6EC,OAA7E,EAAsF;AAC3FF,EAAAA,UAAU,GAAGG,iBAAiB,CAACL,IAAD,EAAOC,WAAP,EAAoBC,UAApB,EAAgCC,OAAhC,EAAyCC,OAAzC,CAA9B;AACA,wCAAYJ,IAAZ,EAAkBM,iCAAYC,QAA9B,EAAwCJ,OAAxC,EAAiDC,OAAjD;AACA,SAAOF,UAAP;AACD;;AAEM,SAASG,iBAAT,CAA2BL,IAA3B,EAAiCC,WAAjC,EAA8CC,UAA9C,EAA0DC,OAA1D,EAAmEC,OAAnE,EAA4E;AACjFF,EAAAA,UAAU,GAAG,8CAAsBF,IAAtB,EAA4BC,WAA5B,EAAyCC,UAAzC,EAAqDC,OAArD,CAAb;AAEAD,EAAAA,UAAU,GAAG,oDAA4BF,IAA5B,EAAkCC,WAAlC,EAA+CC,UAA/C,EAA2DC,OAA3D,CAAb;AACAD,EAAAA,UAAU,GAAG,8CAAsBF,IAAtB,EAA4BC,WAA5B,EAAyCC,UAAzC,EAAqDC,OAArD,CAAb;AAEAD,EAAAA,UAAU,GAAG,kDAAwBF,IAAxB,EAA8BC,WAA9B,EAA2CC,UAA3C,EAAuDC,OAAvD,CAAb;AAEA,MAAMM,YAAY,GAAG,IAAIC,8BAAJ,CAAuBV,IAAI,CAACW,gBAA5B,EAA8CX,IAAI,CAACY,kBAAnD,CAArB;AACAZ,EAAAA,IAAI,CAACa,SAAL,GAAiBJ,YAAY,CAACK,iBAAb,CAA+B,YAA/B,EAA6CC,SAAGC,KAAhD,EAAuD,CAAvD,CAAjB;AAEA,wCAAYhB,IAAZ,EAAkBM,iCAAYC,QAA9B,EAAwCJ,OAAxC,EAAiDC,OAAjD;AAEA,SAAOF,UAAP;AACD","sourcesContent":["// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {GL} from '@loaders.gl/math'; // math.gl/geometry;\nimport Tile3DFeatureTable from '../classes/tile-3d-feature-table';\n// import Tile3DBatchTable from '../classes/tile-3d-batch-table';\n\nimport {parse3DTileHeaderSync} from './helpers/parse-3d-tile-header';\nimport {parse3DTileTablesHeaderSync, parse3DTileTablesSync} from './helpers/parse-3d-tile-tables';\nimport {parse3DTileGLTFViewSync, extractGLTF, GLTF_FORMAT} from './helpers/parse-3d-tile-gltf-view';\n\nexport async function parseBatchedModel3DTile(tile, arrayBuffer, byteOffset, options, context) {\n  byteOffset = parseBatchedModel(tile, arrayBuffer, byteOffset, options, context);\n  await extractGLTF(tile, GLTF_FORMAT.EMBEDDED, options, context);\n  return byteOffset;\n}\n\nexport function parseBatchedModel3DTileSync(tile, arrayBuffer, byteOffset, options, context) {\n  byteOffset = parseBatchedModel(tile, arrayBuffer, byteOffset, options, context);\n  extractGLTF(tile, GLTF_FORMAT.EMBEDDED, options, context);\n  return byteOffset;\n}\n\nexport function parseBatchedModel(tile, arrayBuffer, byteOffset, options, context) {\n  byteOffset = parse3DTileHeaderSync(tile, arrayBuffer, byteOffset, options);\n\n  byteOffset = parse3DTileTablesHeaderSync(tile, arrayBuffer, byteOffset, options);\n  byteOffset = parse3DTileTablesSync(tile, arrayBuffer, byteOffset, options);\n\n  byteOffset = parse3DTileGLTFViewSync(tile, arrayBuffer, byteOffset, options);\n\n  const featureTable = new Tile3DFeatureTable(tile.featureTableJson, tile.featureTableBinary);\n  tile.rtcCenter = featureTable.getGlobalProperty('RTC_CENTER', GL.FLOAT, 3);\n\n  extractGLTF(tile, GLTF_FORMAT.EMBEDDED, options, context);\n\n  return byteOffset;\n}\n"],"file":"parse-3d-tile-batched-model.js"}