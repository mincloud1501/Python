{"version":3,"sources":["../../../../../src/lib/deprecated/packed-json/flatten-to-typed-array.js"],"names":["flattenToTypedArray","nestedArray","ArrayType","Float32Array","length","checkVertices","count","countVertices","typedArray","flattenVerticesInPlace","dimensions","nestedCount","localCount","index","value","Array","isArray","ArrayBuffer","isView","predicate","Number","isFinite","result","flattenVerticesInPlaceRecursive","insert","vertexLength"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nexport function flattenToTypedArray(nestedArray, ArrayType = Float32Array) {\n  if (nestedArray.length === 0) {\n    return new Float32Array(0);\n  }\n\n  if (!checkVertices(nestedArray)) {\n    return null;\n  }\n\n  const count = countVertices(nestedArray);\n\n  const typedArray = new ArrayType(count);\n  flattenVerticesInPlace(nestedArray, typedArray);\n  return typedArray;\n}\n\nfunction countVertices(nestedArray, dimensions = 3) {\n  let nestedCount = 0;\n  let localCount = 0;\n  let index = -1;\n  while (++index < nestedArray.length) {\n    const value = nestedArray[index];\n    if (Array.isArray(value) || ArrayBuffer.isView(value)) {\n      nestedCount += countVertices(value);\n    } else {\n      localCount++;\n    }\n  }\n  return nestedCount + (nestedCount === 0 && localCount < dimensions ? dimensions : localCount);\n}\n\nfunction checkVertices(nestedArray, predicate = Number.isFinite) {\n  let index = -1;\n  while (++index < nestedArray.length) {\n    const value = nestedArray[index];\n    if (Array.isArray(value) || ArrayBuffer.isView(value)) {\n      if (!checkVertices(value, predicate)) {\n        return false;\n      }\n    } else if (!predicate(value)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction flattenVerticesInPlace(nestedArray, result, dimensions = 3) {\n  flattenVerticesInPlaceRecursive(nestedArray, result, dimensions, 0);\n  return result;\n}\n\n// Flattens nested array of vertices, padding third coordinate as needed\nfunction flattenVerticesInPlaceRecursive(nestedArray, result, dimensions, insert) {\n  let index = -1;\n  let vertexLength = 0;\n  while (++index < nestedArray.length) {\n    const value = nestedArray[index];\n    if (Array.isArray(value) || ArrayBuffer.isView(value)) {\n      insert = flattenVerticesInPlaceRecursive(value, result, dimensions, insert);\n    } else {\n      // eslint-disable-next-line\n      if (vertexLength < dimensions) {\n        result[insert++] = value;\n        vertexLength++;\n      }\n    }\n  }\n  // Add a third coordinate if needed\n  if (vertexLength > 0 && vertexLength < dimensions) {\n    result[insert++] = 0;\n  }\n  return insert;\n}\n"],"file":"flatten-to-typed-array.js"}