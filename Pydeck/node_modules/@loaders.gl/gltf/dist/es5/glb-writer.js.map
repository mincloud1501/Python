{"version":3,"sources":["../../src/glb-writer.js"],"names":["name","extensions","mimeType","encodeSync","binary","glb","options","byteOffset","byteLength","arrayBuffer","ArrayBuffer","dataView","DataView"],"mappings":";;;;;;;;;AAAA;;eAEe;AACbA,EAAAA,IAAI,EAAE,KADO;AAEbC,EAAAA,UAAU,EAAE,CAAC,KAAD,CAFC;AAGbC,EAAAA,QAAQ,EAAE,mBAHG;AAIbC,EAAAA,UAAU,EAAVA,UAJa;AAKbC,EAAAA,MAAM,EAAE;AALK,C;;;AAQf,SAASD,UAAT,CAAoBE,GAApB,EAAyBC,OAAzB,EAAkC;AAAA,4BACPA,OADO,CACzBC,UADyB;AAAA,MACzBA,UADyB,oCACZ,CADY;AAIhC,MAAMC,UAAU,GAAG,2BAAcH,GAAd,EAAmB,IAAnB,EAAyBE,UAAzB,EAAqCD,OAArC,CAAnB;AACA,MAAMG,WAAW,GAAG,IAAIC,WAAJ,CAAgBF,UAAhB,CAApB;AAGA,MAAMG,QAAQ,GAAG,IAAIC,QAAJ,CAAaH,WAAb,CAAjB;AACA,6BAAcJ,GAAd,EAAmBM,QAAnB,EAA6BJ,UAA7B,EAAyCD,OAAzC;AAEA,SAAOG,WAAP;AACD","sourcesContent":["import encodeGLBSync from './lib/encode-glb';\n\nexport default {\n  name: 'GLB',\n  extensions: ['glb'],\n  mimeType: 'model/gltf-binary',\n  encodeSync,\n  binary: true\n};\n\nfunction encodeSync(glb, options) {\n  const {byteOffset = 0} = options;\n\n  // Calculate length and allocate buffer\n  const byteLength = encodeGLBSync(glb, null, byteOffset, options);\n  const arrayBuffer = new ArrayBuffer(byteLength);\n\n  // Encode into buffer\n  const dataView = new DataView(arrayBuffer);\n  encodeGLBSync(glb, dataView, byteOffset, options);\n\n  return arrayBuffer;\n}\n"],"file":"glb-writer.js"}