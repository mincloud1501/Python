{"version":3,"sources":["../../../../src/geometry/iterators/attribute-iterator.js"],"names":["attributeIterator","values","size","ArrayType","constructor","element","i","length","j"],"mappings":";;;;;;;;;;;2CAGyBA,iB;;AAAV,SAAUA,iBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6BC,UAAAA,MAA7B,QAA6BA,MAA7B,EAAqCC,IAArC,QAAqCA,IAArC;AACPC,UAAAA,SADO,GACKF,MAAM,CAACG,WADZ;AAEPC,UAAAA,OAFO,GAEG,IAAIF,SAAJ,CAAcD,IAAd,CAFH;AAGJI,UAAAA,CAHI,GAGA,CAHA;;AAAA;AAAA,gBAGGA,CAAC,GAAGL,MAAM,CAACM,MAHd;AAAA;AAAA;AAAA;;AAIX,eAASC,CAAT,GAAa,CAAb,EAAgBA,CAAC,GAAGN,IAApB,EAA0BM,CAAC,EAA3B,EAA+B;AAC7BH,YAAAA,OAAO,CAACG,CAAD,CAAP,GAAaH,OAAO,CAACC,CAAC,GAAGE,CAAL,CAApB;AACD;;AANU;AAOX,iBAAMH,OAAN;;AAPW;AAGsBC,UAAAA,CAAC,IAAIJ,IAH3B;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["// Iterates over a single attribute\n// NOTE: creates and re-yields a single element\n\nexport default function* attributeIterator({values, size}) {\n  const ArrayType = values.constructor;\n  const element = new ArrayType(size);\n  for (let i = 0; i < values.length; i += size) {\n    for (let j = 0; j < size; j++) {\n      element[j] = element[i + j];\n    }\n    yield element;\n  }\n}\n"],"file":"attribute-iterator.js"}