{"version":3,"sources":["../../../src/algorithms/bounding-box-from-points.js"],"names":["Vector3","Matrix3","computeEigenDecomposition","scratchVector2","scratchVector3","scratchVector4","scratchVector5","scratchVector6","scratchCovarianceResult","scratchEigenResult","diagonal","unitary","makeOrientedBoundingBoxfromPoints","positions","result","length","halfAxes","center","meanPoint","position","add","invLength","multiplyByScalar","exx","exy","exz","eyy","eyz","ezz","p","copy","subtract","x","y","z","covarianceMatrix","rotation","v1","getColumn","v2","v3","u1","Number","MAX_VALUE","u2","u3","l1","l2","l3","Math","max","dot","min","scale","set"],"mappings":"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","sourcesContent":["// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {Vector3, Matrix3} from 'math.gl';\nimport computeEigenDecomposition from './compute-eigen-decomposition';\n\nconst scratchVector2 = new Vector3();\n\nconst scratchVector3 = new Vector3();\n\nconst scratchVector4 = new Vector3();\n\nconst scratchVector5 = new Vector3();\n\nconst scratchVector6 = new Vector3();\n\nconst scratchCovarianceResult = new Matrix3();\n\nconst scratchEigenResult = {\n  diagonal: new Matrix3(),\n  unitary: new Matrix3()\n};\n\n// Computes an instance of an OrientedBoundingBox of the given positions.\n// This is an implementation of Stefan Gottschalk's Collision Queries using Oriented Bounding Boxes solution (PHD thesis).\n// Reference: http://gamma.cs.unc.edu/users/gottschalk/main.pdf\n// eslint-disable-next-line max-statements\nexport default function makeOrientedBoundingBoxfromPoints(positions, result) {\n  if (!positions || positions.length === 0) {\n    result.halfAxes = new Matrix3([0, 0, 0, 0, 0, 0, 0, 0, 0]);\n    result.center = new Vector3();\n    return result;\n  }\n\n  const length = positions.length;\n  const meanPoint = new Vector3(0, 0, 0);\n  for (const position of positions) {\n    meanPoint.add(position);\n  }\n  const invLength = 1.0 / length;\n  meanPoint.multiplyByScalar(invLength);\n\n  let exx = 0.0;\n  let exy = 0.0;\n  let exz = 0.0;\n  let eyy = 0.0;\n  let eyz = 0.0;\n  let ezz = 0.0;\n\n  for (const position of positions) {\n    const p = scratchVector2.copy(position).subtract(meanPoint);\n    exx += p.x * p.x;\n    exy += p.x * p.y;\n    exz += p.x * p.z;\n    eyy += p.y * p.y;\n    eyz += p.y * p.z;\n    ezz += p.z * p.z;\n  }\n\n  exx *= invLength;\n  exy *= invLength;\n  exz *= invLength;\n  eyy *= invLength;\n  eyz *= invLength;\n  ezz *= invLength;\n\n  const covarianceMatrix = scratchCovarianceResult;\n  covarianceMatrix[0] = exx;\n  covarianceMatrix[1] = exy;\n  covarianceMatrix[2] = exz;\n  covarianceMatrix[3] = exy;\n  covarianceMatrix[4] = eyy;\n  covarianceMatrix[5] = eyz;\n  covarianceMatrix[6] = exz;\n  covarianceMatrix[7] = eyz;\n  covarianceMatrix[8] = ezz;\n\n  const {unitary} = computeEigenDecomposition(covarianceMatrix, scratchEigenResult);\n  const rotation = result.halfAxes.copy(unitary);\n\n  let v1 = rotation.getColumn(0, scratchVector4);\n  let v2 = rotation.getColumn(1, scratchVector5);\n  let v3 = rotation.getColumn(2, scratchVector6);\n\n  let u1 = -Number.MAX_VALUE;\n  let u2 = -Number.MAX_VALUE;\n  let u3 = -Number.MAX_VALUE;\n  let l1 = Number.MAX_VALUE;\n  let l2 = Number.MAX_VALUE;\n  let l3 = Number.MAX_VALUE;\n\n  for (const position of positions) {\n    u1 = Math.max(position.dot(v1), u1);\n    u2 = Math.max(position.dot(v2), u2);\n    u3 = Math.max(position.dot(v3), u3);\n\n    l1 = Math.min(position.dot(v1), l1);\n    l2 = Math.min(position.dot(v2), l2);\n    l3 = Math.min(position.dot(v3), l3);\n  }\n\n  v1 = v1.multiplyByScalar(0.5 * (l1 + u1));\n  v2 = v2.multiplyByScalar(0.5 * (l2 + u2));\n  v3 = v3.multiplyByScalar(0.5 * (l3 + u3));\n\n  result.center\n    .copy(v1)\n    .add(v2)\n    .add(v3);\n\n  const scale = scratchVector3.set(u1 - l1, u2 - l2, u3 - l3).multiplyByScalar(0.5);\n  result.halfAxes.multiplyByScalar(scale);\n\n  return result;\n}\n"],"file":"bounding-box-from-points.js"}