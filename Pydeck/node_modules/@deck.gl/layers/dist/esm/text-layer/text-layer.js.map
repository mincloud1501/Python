{"version":3,"sources":["../../../src/text-layer/text-layer.js"],"names":["CompositeLayer","createIterable","MultiIconLayer","FontAtlasManager","DEFAULT_CHAR_SET","DEFAULT_FONT_FAMILY","DEFAULT_FONT_WEIGHT","DEFAULT_FONT_SIZE","DEFAULT_BUFFER","DEFAULT_RADIUS","DEFAULT_CUTOFF","replaceInRange","transformParagraph","DEFAULT_FONT_SETTINGS","fontSize","buffer","sdf","radius","cutoff","TEXT_ANCHOR","start","middle","end","ALIGNMENT_BASELINE","top","center","bottom","DEFAULT_COLOR","DEFAULT_LINE_HEIGHT","FONT_SETTINGS_PROPS","defaultProps","billboard","sizeScale","sizeUnits","sizeMinPixels","sizeMaxPixels","Number","MAX_SAFE_INTEGER","characterSet","fontFamily","fontWeight","lineHeight","fontSettings","getText","type","value","x","text","getPosition","position","getColor","getSize","getAngle","getTextAnchor","getAlignmentBaseline","getPixelOffset","TextLayer","state","fontAtlasManager","context","gl","props","oldProps","changeFlags","fontChanged","updateFontAtlas","textChanged","dataChanged","updateTriggersChanged","all","Array","isArray","data","slice","dataDiff","map","dataRange","getIndex","p","__source","index","replace","transformStringToLetters","setState","finalize","setProps","Object","assign","scale","texture","mapping","iconAtlas","iconMapping","setNeedsRedraw","oldFontSettings","some","prop","info","object","startRow","endRow","iterable","objectInfo","transformedData","transformCharacter","transformed","getSubLayerRow","getSubLayerAccessor","transitions","updateTriggers","SubLayerClass","getSubLayerClass","_dataDiff","getAnchorX","getAnchorXFromTextAnchor","getAnchorY","getAnchorYFromAlignmentBaseline","getPickingIndex","obj","getSubLayerProps","id","getIcon","d","getRowSize","rowSize","getOffsets","offsetLeft","offsetTop","getParagraphSize","size","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {CompositeLayer, createIterable} from '@deck.gl/core';\nimport MultiIconLayer from './multi-icon-layer/multi-icon-layer';\nimport FontAtlasManager, {\n  DEFAULT_CHAR_SET,\n  DEFAULT_FONT_FAMILY,\n  DEFAULT_FONT_WEIGHT,\n  DEFAULT_FONT_SIZE,\n  DEFAULT_BUFFER,\n  DEFAULT_RADIUS,\n  DEFAULT_CUTOFF\n} from './font-atlas-manager';\nimport {replaceInRange} from '../utils';\nimport {transformParagraph} from './utils';\n\nconst DEFAULT_FONT_SETTINGS = {\n  fontSize: DEFAULT_FONT_SIZE,\n  buffer: DEFAULT_BUFFER,\n  sdf: false,\n  radius: DEFAULT_RADIUS,\n  cutoff: DEFAULT_CUTOFF\n};\n\nconst TEXT_ANCHOR = {\n  start: 1,\n  middle: 0,\n  end: -1\n};\n\nconst ALIGNMENT_BASELINE = {\n  top: 1,\n  center: 0,\n  bottom: -1\n};\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\n\nconst DEFAULT_LINE_HEIGHT = 1.0;\n\nconst FONT_SETTINGS_PROPS = ['fontSize', 'buffer', 'sdf', 'radius', 'cutoff'];\n\nconst defaultProps = {\n  billboard: true,\n  sizeScale: 1,\n  sizeUnits: 'pixels',\n  sizeMinPixels: 0,\n  sizeMaxPixels: Number.MAX_SAFE_INTEGER,\n\n  characterSet: DEFAULT_CHAR_SET,\n  fontFamily: DEFAULT_FONT_FAMILY,\n  fontWeight: DEFAULT_FONT_WEIGHT,\n  lineHeight: DEFAULT_LINE_HEIGHT,\n  fontSettings: {},\n\n  getText: {type: 'accessor', value: x => x.text},\n  getPosition: {type: 'accessor', value: x => x.position},\n  getColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getSize: {type: 'accessor', value: 32},\n  getAngle: {type: 'accessor', value: 0},\n  getTextAnchor: {type: 'accessor', value: 'middle'},\n  getAlignmentBaseline: {type: 'accessor', value: 'center'},\n  getPixelOffset: {type: 'accessor', value: [0, 0]}\n};\n\nexport default class TextLayer extends CompositeLayer {\n  initializeState() {\n    this.state = {\n      fontAtlasManager: new FontAtlasManager(this.context.gl)\n    };\n  }\n\n  updateState({props, oldProps, changeFlags}) {\n    const fontChanged = this.fontChanged(oldProps, props);\n    if (fontChanged) {\n      this.updateFontAtlas({oldProps, props});\n    }\n\n    const textChanged =\n      changeFlags.dataChanged ||\n      fontChanged ||\n      props.lineHeight !== oldProps.lineHeight ||\n      (changeFlags.updateTriggersChanged &&\n        (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getText));\n\n    if (textChanged && Array.isArray(changeFlags.dataChanged)) {\n      const data = this.state.data.slice();\n      const dataDiff = changeFlags.dataChanged.map(dataRange =>\n        replaceInRange({\n          data,\n          getIndex: p => p.__source.index,\n          dataRange,\n          replace: this.transformStringToLetters(dataRange)\n        })\n      );\n      this.setState({data, dataDiff});\n    } else if (textChanged) {\n      this.setState({\n        data: this.transformStringToLetters(),\n        dataDiff: null\n      });\n    }\n  }\n\n  finalizeState() {\n    super.finalizeState();\n    // Release resources held by the font atlas manager\n    this.state.fontAtlasManager.finalize();\n  }\n\n  updateFontAtlas({oldProps, props}) {\n    const {characterSet, fontSettings, fontFamily, fontWeight} = props;\n\n    // generate test characterSet\n    const fontAtlasManager = this.state.fontAtlasManager;\n    fontAtlasManager.setProps(\n      Object.assign({}, DEFAULT_FONT_SETTINGS, fontSettings, {\n        characterSet,\n        fontFamily,\n        fontWeight\n      })\n    );\n\n    const {scale, texture, mapping} = fontAtlasManager;\n\n    this.setState({\n      scale,\n      iconAtlas: texture,\n      iconMapping: mapping\n    });\n\n    this.setNeedsRedraw(true);\n  }\n\n  fontChanged(oldProps, props) {\n    if (\n      oldProps.fontFamily !== props.fontFamily ||\n      oldProps.characterSet !== props.characterSet ||\n      oldProps.fontWeight !== props.fontWeight\n    ) {\n      return true;\n    }\n\n    if (oldProps.fontSettings === props.fontSettings) {\n      return false;\n    }\n\n    const oldFontSettings = oldProps.fontSettings || {};\n    const fontSettings = props.fontSettings || {};\n\n    return FONT_SETTINGS_PROPS.some(prop => oldFontSettings[prop] !== fontSettings[prop]);\n  }\n\n  getPickingInfo({info}) {\n    // because `TextLayer` assign the same pickingInfoIndex for one text label,\n    // here info.index refers the index of text label in props.data\n    return Object.assign(info, {\n      // override object with original data\n      object: info.index >= 0 ? this.props.data[info.index] : null\n    });\n  }\n\n  /* eslint-disable no-loop-func */\n  transformStringToLetters(dataRange = {}) {\n    const {data, lineHeight, getText} = this.props;\n    const {iconMapping} = this.state;\n    const {startRow, endRow} = dataRange;\n    const {iterable, objectInfo} = createIterable(data, startRow, endRow);\n\n    const transformedData = [];\n\n    for (const object of iterable) {\n      const transformCharacter = transformed => {\n        return this.getSubLayerRow(transformed, object, objectInfo.index);\n      };\n\n      objectInfo.index++;\n      const text = getText(object, objectInfo);\n      if (text) {\n        transformParagraph(text, lineHeight, iconMapping, transformCharacter, transformedData);\n      }\n    }\n\n    return transformedData;\n  }\n\n  getAnchorXFromTextAnchor(getTextAnchor) {\n    if (typeof getTextAnchor === 'function') {\n      getTextAnchor = this.getSubLayerAccessor(getTextAnchor);\n      return x => TEXT_ANCHOR[getTextAnchor(x)] || 0;\n    }\n    return () => TEXT_ANCHOR[getTextAnchor] || 0;\n  }\n\n  getAnchorYFromAlignmentBaseline(getAlignmentBaseline) {\n    if (typeof getAlignmentBaseline === 'function') {\n      getAlignmentBaseline = this.getSubLayerAccessor(getAlignmentBaseline);\n      return x => TEXT_ANCHOR[getAlignmentBaseline(x)] || 0;\n    }\n    return () => ALIGNMENT_BASELINE[getAlignmentBaseline] || 0;\n  }\n\n  renderLayers() {\n    const {data, dataDiff, scale, iconAtlas, iconMapping} = this.state;\n\n    const {\n      getPosition,\n      getColor,\n      getSize,\n      getAngle,\n      getTextAnchor,\n      getAlignmentBaseline,\n      getPixelOffset,\n      billboard,\n      sdf,\n      sizeScale,\n      sizeUnits,\n      sizeMinPixels,\n      sizeMaxPixels,\n      transitions,\n      updateTriggers\n    } = this.props;\n\n    const SubLayerClass = this.getSubLayerClass('characters', MultiIconLayer);\n\n    return new SubLayerClass(\n      {\n        sdf,\n        iconAtlas,\n        iconMapping,\n\n        _dataDiff: dataDiff && (() => dataDiff),\n\n        getPosition: this.getSubLayerAccessor(getPosition),\n        getColor: this.getSubLayerAccessor(getColor),\n        getSize: this.getSubLayerAccessor(getSize),\n        getAngle: this.getSubLayerAccessor(getAngle),\n        getAnchorX: this.getAnchorXFromTextAnchor(getTextAnchor),\n        getAnchorY: this.getAnchorYFromAlignmentBaseline(getAlignmentBaseline),\n        getPixelOffset: this.getSubLayerAccessor(getPixelOffset),\n        getPickingIndex: obj => obj.__source.index,\n        billboard,\n        sizeScale: sizeScale * scale,\n        sizeUnits,\n        sizeMinPixels: sizeMinPixels * scale,\n        sizeMaxPixels: sizeMaxPixels * scale,\n\n        transitions: transitions && {\n          getPosition: transitions.getPosition,\n          getAngle: transitions.getAngle,\n          getColor: transitions.getColor,\n          getSize: transitions.getSize,\n          getPixelOffset: updateTriggers.getPixelOffset\n        }\n      },\n      this.getSubLayerProps({\n        id: 'characters',\n        updateTriggers: {\n          getPosition: updateTriggers.getPosition,\n          getAngle: updateTriggers.getAngle,\n          getColor: updateTriggers.getColor,\n          getSize: updateTriggers.getSize,\n          getPixelOffset: updateTriggers.getPixelOffset,\n          getAnchorX: updateTriggers.getTextAnchor,\n          getAnchorY: updateTriggers.getAlignmentBaseline\n        }\n      }),\n      {\n        data,\n        getIcon: d => d.text,\n        getRowSize: d => d.rowSize,\n        getOffsets: d => [d.offsetLeft, d.offsetTop],\n        getParagraphSize: d => d.size\n      }\n    );\n  }\n}\n\nTextLayer.layerName = 'TextLayer';\nTextLayer.defaultProps = defaultProps;\n"],"file":"text-layer.js"}