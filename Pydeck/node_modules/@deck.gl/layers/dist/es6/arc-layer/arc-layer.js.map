{"version":3,"sources":["../../../src/arc-layer/arc-layer.js"],"names":["Layer","createIterable","Model","Geometry","vs","fs","DEFAULT_COLOR","defaultProps","getSourcePosition","type","value","x","sourcePosition","getTargetPosition","targetPosition","getSourceColor","getTargetColor","getWidth","getHeight","getTilt","widthUnits","widthScale","min","widthMinPixels","widthMaxPixels","Number","MAX_SAFE_INTEGER","getStrokeWidth","deprecatedFor","ArcLayer","getShaders","modules","initializeState","attributeManager","getAttributeManager","addInstanced","instancePositions","size","fp64","use64bitPositions","transition","accessor","update","calculateInstancePositions","instanceSourceColors","props","colorFormat","length","normalized","defaultValue","instanceTargetColors","instanceWidths","instanceHeights","instanceTilts","updateState","oldProps","changeFlags","extensionsChanged","gl","context","state","model","delete","setState","_getModel","invalidateAll","draw","uniforms","viewport","widthMultiplier","distanceScales","metersPerPixel","setUniforms","Object","assign","positions","NUM_SEGMENTS","i","concat","id","geometry","drawMode","attributes","Float32Array","isInstanced","numSegments","attribute","startRow","endRow","data","iterable","objectInfo","object","index","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Layer, createIterable} from '@deck.gl/core';\n\nimport GL from '@luma.gl/constants';\nimport {Model, Geometry} from '@luma.gl/core';\n\nimport vs from './arc-layer-vertex.glsl';\nimport fs from './arc-layer-fragment.glsl';\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\n\nconst defaultProps = {\n  getSourcePosition: {type: 'accessor', value: x => x.sourcePosition},\n  getTargetPosition: {type: 'accessor', value: x => x.targetPosition},\n  getSourceColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getTargetColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getWidth: {type: 'accessor', value: 1},\n  getHeight: {type: 'accessor', value: 1},\n  getTilt: {type: 'accessor', value: 0},\n\n  widthUnits: 'pixels',\n  widthScale: {type: 'number', value: 1, min: 0},\n  widthMinPixels: {type: 'number', value: 0, min: 0},\n  widthMaxPixels: {type: 'number', value: Number.MAX_SAFE_INTEGER, min: 0},\n\n  // Deprecated, remove in v8\n  getStrokeWidth: {deprecatedFor: 'getWidth'}\n};\n\nexport default class ArcLayer extends Layer {\n  getShaders() {\n    return super.getShaders({vs, fs, modules: ['picking']}); // 'project' module added by default.\n  }\n\n  initializeState() {\n    const attributeManager = this.getAttributeManager();\n\n    /* eslint-disable max-len */\n    attributeManager.addInstanced({\n      instancePositions: {\n        size: 4,\n        type: GL.DOUBLE,\n        fp64: this.use64bitPositions(),\n        transition: true,\n        accessor: ['getSourcePosition', 'getTargetPosition'],\n        update: this.calculateInstancePositions\n      },\n      instanceSourceColors: {\n        size: this.props.colorFormat.length,\n        type: GL.UNSIGNED_BYTE,\n        normalized: true,\n        transition: true,\n        accessor: 'getSourceColor',\n        defaultValue: DEFAULT_COLOR\n      },\n      instanceTargetColors: {\n        size: this.props.colorFormat.length,\n        type: GL.UNSIGNED_BYTE,\n        normalized: true,\n        transition: true,\n        accessor: 'getTargetColor',\n        defaultValue: DEFAULT_COLOR\n      },\n      instanceWidths: {\n        size: 1,\n        transition: true,\n        accessor: 'getWidth',\n        defaultValue: 1\n      },\n      instanceHeights: {\n        size: 1,\n        transition: true,\n        accessor: 'getHeight',\n        defaultValue: 1\n      },\n      instanceTilts: {\n        size: 1,\n        transition: true,\n        accessor: 'getTilt',\n        defaultValue: 0\n      }\n    });\n    /* eslint-enable max-len */\n  }\n\n  updateState({props, oldProps, changeFlags}) {\n    super.updateState({props, oldProps, changeFlags});\n    // Re-generate model if geometry changed\n    if (changeFlags.extensionsChanged) {\n      const {gl} = this.context;\n      if (this.state.model) {\n        this.state.model.delete();\n      }\n      this.setState({model: this._getModel(gl)});\n      this.getAttributeManager().invalidateAll();\n    }\n  }\n\n  draw({uniforms}) {\n    const {viewport} = this.context;\n    const {widthUnits, widthScale, widthMinPixels, widthMaxPixels} = this.props;\n\n    const widthMultiplier = widthUnits === 'pixels' ? viewport.distanceScales.metersPerPixel[2] : 1;\n\n    this.state.model\n      .setUniforms(\n        Object.assign({}, uniforms, {\n          widthScale: widthScale * widthMultiplier,\n          widthMinPixels,\n          widthMaxPixels\n        })\n      )\n      .draw();\n  }\n\n  _getModel(gl) {\n    let positions = [];\n    const NUM_SEGMENTS = 50;\n    /*\n     *  (0, -1)-------------_(1, -1)\n     *       |          _,-\"  |\n     *       o      _,-\"      o\n     *       |  _,-\"          |\n     *   (0, 1)\"-------------(1, 1)\n     */\n    for (let i = 0; i < NUM_SEGMENTS; i++) {\n      positions = positions.concat([i, -1, 0, i, 1, 0]);\n    }\n\n    const model = new Model(\n      gl,\n      Object.assign({}, this.getShaders(), {\n        id: this.props.id,\n        geometry: new Geometry({\n          drawMode: GL.TRIANGLE_STRIP,\n          attributes: {\n            positions: new Float32Array(positions)\n          }\n        }),\n        isInstanced: true\n      })\n    );\n\n    model.setUniforms({numSegments: NUM_SEGMENTS});\n\n    return model;\n  }\n\n  calculateInstancePositions(attribute, {startRow, endRow}) {\n    const {data, getSourcePosition, getTargetPosition} = this.props;\n    const {value, size} = attribute;\n    let i = startRow * size;\n    const {iterable, objectInfo} = createIterable(data, startRow, endRow);\n    for (const object of iterable) {\n      objectInfo.index++;\n      const sourcePosition = getSourcePosition(object, objectInfo);\n      value[i++] = sourcePosition[0];\n      value[i++] = sourcePosition[1];\n      // Call `getTargetPosition` after `sourcePosition` is used in case both accessors write into\n      // the same temp array\n      const targetPosition = getTargetPosition(object, objectInfo);\n      value[i++] = targetPosition[0];\n      value[i++] = targetPosition[1];\n    }\n  }\n}\n\nArcLayer.layerName = 'ArcLayer';\nArcLayer.defaultProps = defaultProps;\n"],"file":"arc-layer.js"}