import parseExpressionString from './parse-expression-string';
import { getPropTypes, isFunctionProp } from './deck-prop-types';
export default function convertFunctions(Class, props, configuration) {
  var propTypes = getPropTypes(Class);
  return convertFunctionsUsingPropTypes(props, propTypes, configuration);
}

function convertFunctionsUsingPropTypes(props, propTypes, configuration) {
  var replacedProps = {};

  for (var propName in props) {
    var propValue = props[propName];
    var isFunction = isFunctionProp(propTypes, propName);

    if (isFunction && typeof propValue === 'string') {
      var isAccessor = true;
      propValue = parseExpressionString(propValue, configuration, isAccessor);
    }

    if (propValue) {
      replacedProps[propName] = propValue;
    }
  }

  return replacedProps;
}
//# sourceMappingURL=convert-functions.js.map