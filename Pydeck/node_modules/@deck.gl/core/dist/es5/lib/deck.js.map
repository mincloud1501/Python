{"version":3,"sources":["../../../src/lib/deck.js"],"names":["noop","getCursor","isDragging","getPropTypes","PropTypes","id","string","width","oneOfType","number","height","layers","object","array","layerFilter","func","views","viewState","effects","arrayOf","instanceOf","Effect","controller","bool","gl","glOptions","parameters","pickingRadius","useDevicePixels","touchAction","onWebGLInitialized","onResize","onViewStateChange","onBeforeRender","onAfterRender","onLoad","debug","drawPickingColors","_animate","defaultProps","_onMetrics","Deck","props","Object","assign","viewManager","layerManager","effectManager","deckRenderer","deckPicker","_needsRedraw","_pickRequest","_lastPointerDownInfo","initialViewState","interactiveState","_onEvent","bind","_onPointerDown","_onPointerMove","_pickAndCallback","_onRendererInitialized","_onRenderFrame","_onViewStateChange","_onInteractiveStateChange","isIE11","log","warn","document","canvas","_createCanvas","animationLoop","_createAnimationLoop","stats","Stats","metrics","fps","setPropsTime","updateAttributesTime","framesRedrawn","pickTime","pickCount","gpuTime","gpuTimePerFrame","cpuTime","cpuTimePerFrame","bufferMemory","textureMemory","renderbufferMemory","gpuMemory","_metricsCounter","setProps","start","stop","finalize","eventManager","destroy","tooltip","remove","parentElement","removeChild","get","timeStart","removed","_setCanvasSize","newProps","_getViews","_getViewState","timeEnd","opts","clearRedrawFlags","redraw","viewManagerNeedsRedraw","needsRedraw","layerManagerNeedsRedraw","effectManagerNeedsRedraw","deckRendererNeedsRedraw","force","redrawReason","incrementCount","_customRender","_drawLayers","rect","getViewports","x","y","radius","layerIds","getLayers","activateViewport","selectedInfos","pickObject","viewports","mode","depth","result","length","infos","pickObjects","getElementById","createElement","parent","body","appendChild","style","Number","isFinite","position","_checkForCanvasSizeChange","newWidth","clientWidth","newHeight","clientHeight","autoResizeDrawingBuffer","AnimationLoop","onCreateContext","onInitialize","onRender","MapView","Array","isArray","event","type","leftButton","rightButton","pos","offsetCenter","context","mousePosition","callback","onHover","emptyInfo","shouldGenerateInfo","getTooltip","pickedInfo","find","info","index","displayInfo","setTooltip","cursor","enable","copyState","Tooltip","blend","blendFunc","polygonOffsetFill","depthTest","depthFunc","timeline","Timeline","play","attachTimeline","EventManager","events","pointerdown","pointermove","pointerleave","eventType","EVENTS","on","ViewManager","onInteractiveStateChange","viewport","LayerManager","deck","EffectManager","DeckRenderer","DeckPicker","_updateCanvasSize","renderOptions","renderLayers","getViews","pass","getEffects","_setGLContext","animationProps","_getFrameStats","_getMetrics","reset","table","_updateCursor","updateLayers","updateViewStates","params","viewId","eventOptions","getLastPickedObject","layer","layerHandler","handler","rootHandler","handled","call","animationLoopStats","addTime","lastTiming","getHz","time","count","getAverageTime","memoryStats","lumaStats","window","undefined","navigator","userAgent","indexOf","VERSION","deckGlobal"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport LayerManager from './layer-manager';\nimport ViewManager from './view-manager';\nimport MapView from '../views/map-view';\nimport EffectManager from './effect-manager';\nimport Effect from './effect';\nimport DeckRenderer from './deck-renderer';\nimport DeckPicker from './deck-picker';\nimport Tooltip from './tooltip';\nimport log from '../utils/log';\nimport deckGlobal from './init';\n\nimport GL from '@luma.gl/constants';\nimport {\n  AnimationLoop,\n  createGLContext,\n  trackContextState,\n  setParameters,\n  lumaStats\n} from '@luma.gl/core';\nimport {Timeline} from '@luma.gl/addons';\nimport {Stats} from 'probe.gl';\nimport {EventManager} from 'mjolnir.js';\n\nimport assert from '../utils/assert';\nimport {EVENTS} from './constants';\n/* global window, document */\n\nfunction noop() {}\n\nconst getCursor = ({isDragging}) => (isDragging ? 'grabbing' : 'grab');\n\nfunction getPropTypes(PropTypes) {\n  // Note: Arrays (layers, views, ) can contain falsy values\n  return {\n    id: PropTypes.string,\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n    // layer/view/controller settings\n    layers: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    layerFilter: PropTypes.func,\n    views: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    viewState: PropTypes.object,\n    effects: PropTypes.arrayOf(PropTypes.instanceOf(Effect)),\n    controller: PropTypes.oneOfType([PropTypes.func, PropTypes.bool, PropTypes.object]),\n\n    // GL settings\n    gl: PropTypes.object,\n    glOptions: PropTypes.object,\n    parameters: PropTypes.object,\n    pickingRadius: PropTypes.number,\n    useDevicePixels: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n    touchAction: PropTypes.string,\n\n    // Callbacks\n    onWebGLInitialized: PropTypes.func,\n    onResize: PropTypes.func,\n    onViewStateChange: PropTypes.func,\n    onBeforeRender: PropTypes.func,\n    onAfterRender: PropTypes.func,\n    onLoad: PropTypes.func,\n\n    // Debug settings\n    debug: PropTypes.bool,\n    drawPickingColors: PropTypes.bool,\n\n    // Experimental props\n\n    // Forces a redraw every animation frame\n    _animate: PropTypes.bool\n  };\n}\n\nconst defaultProps = {\n  id: 'deckgl-overlay',\n  width: '100%',\n  height: '100%',\n\n  pickingRadius: 0,\n  layerFilter: null,\n  glOptions: {},\n  gl: null,\n  layers: [],\n  effects: [],\n  views: null,\n  controller: null, // Rely on external controller, e.g. react-map-gl\n  useDevicePixels: true,\n  touchAction: 'none',\n  _animate: false,\n\n  onWebGLInitialized: noop,\n  onResize: noop,\n  onViewStateChange: noop,\n  onBeforeRender: noop,\n  onAfterRender: noop,\n  onLoad: noop,\n  _onMetrics: null,\n\n  getCursor,\n\n  debug: false,\n  drawPickingColors: false\n};\n\n/* eslint-disable max-statements */\nexport default class Deck {\n  constructor(props) {\n    props = Object.assign({}, defaultProps, props);\n\n    this.width = 0; // \"read-only\", auto-updated from canvas\n    this.height = 0; // \"read-only\", auto-updated from canvas\n\n    // Maps view descriptors to vieports, rebuilds when width/height/viewState/views change\n    this.viewManager = null;\n    this.layerManager = null;\n    this.effectManager = null;\n    this.deckRenderer = null;\n    this.deckPicker = null;\n\n    this._needsRedraw = true;\n    this._pickRequest = {};\n    // Pick and store the object under the pointer on `pointerdown`.\n    // This object is reused for subsequent `onClick` and `onDrag*` callbacks.\n    this._lastPointerDownInfo = null;\n\n    this.viewState = props.initialViewState || null; // Internal view state if no callback is supplied\n    this.interactiveState = {\n      isDragging: false // Whether the cursor is down\n    };\n\n    // Bind methods\n    this._onEvent = this._onEvent.bind(this);\n    this._onPointerDown = this._onPointerDown.bind(this);\n    this._onPointerMove = this._onPointerMove.bind(this);\n    this._pickAndCallback = this._pickAndCallback.bind(this);\n    this._onRendererInitialized = this._onRendererInitialized.bind(this);\n    this._onRenderFrame = this._onRenderFrame.bind(this);\n    this._onViewStateChange = this._onViewStateChange.bind(this);\n    this._onInteractiveStateChange = this._onInteractiveStateChange.bind(this);\n\n    if (isIE11()) {\n      log.warn('IE 11 support will be deprecated in v8.0')();\n    }\n\n    if (!props.gl) {\n      // Note: LayerManager creation deferred until gl context available\n      if (typeof document !== 'undefined') {\n        this.canvas = this._createCanvas(props);\n      }\n    }\n    this.animationLoop = this._createAnimationLoop(props);\n\n    this.stats = new Stats({id: 'deck.gl'});\n    this.metrics = {\n      fps: 0,\n      setPropsTime: 0,\n      updateAttributesTime: 0,\n      framesRedrawn: 0,\n      pickTime: 0,\n      pickCount: 0,\n      gpuTime: 0,\n      gpuTimePerFrame: 0,\n      cpuTime: 0,\n      cpuTimePerFrame: 0,\n      bufferMemory: 0,\n      textureMemory: 0,\n      renderbufferMemory: 0,\n      gpuMemory: 0\n    };\n    this._metricsCounter = 0;\n\n    this.setProps(props);\n\n    this.animationLoop.start();\n  }\n\n  finalize() {\n    this.animationLoop.stop();\n    this.animationLoop = null;\n    this._lastPointerDownInfo = null;\n\n    if (this.layerManager) {\n      this.layerManager.finalize();\n      this.layerManager = null;\n    }\n\n    if (this.viewManager) {\n      this.viewManager.finalize();\n      this.viewManager = null;\n    }\n\n    if (this.effectManager) {\n      this.effectManager.finalize();\n      this.effectManager = null;\n    }\n\n    if (this.deckRenderer) {\n      this.deckRenderer.finalize();\n      this.deckRenderer = null;\n    }\n\n    if (this.eventManager) {\n      this.eventManager.destroy();\n    }\n\n    if (this.tooltip) {\n      this.tooltip.remove();\n      this.tooltip = null;\n    }\n\n    if (!this.props.canvas && !this.props.gl && this.canvas) {\n      // remove internally created canvas\n      this.canvas.parentElement.removeChild(this.canvas);\n      this.canvas = null;\n    }\n  }\n\n  setProps(props) {\n    this.stats.get('setProps Time').timeStart();\n\n    if ('onLayerHover' in props) {\n      log.removed('onLayerHover', 'onHover')();\n    }\n    if ('onLayerClick' in props) {\n      log.removed('onLayerClick', 'onClick')();\n    }\n\n    props = Object.assign({}, this.props, props);\n    this.props = props;\n\n    // Update CSS size of canvas\n    this._setCanvasSize(props);\n\n    // We need to overwrite CSS style width and height with actual, numeric values\n    const newProps = Object.assign({}, props, {\n      views: this._getViews(this.props),\n      width: this.width,\n      height: this.height\n    });\n\n    const viewState = this._getViewState(props);\n    if (viewState) {\n      newProps.viewState = viewState;\n    }\n\n    // Update view manager props\n    if (this.viewManager) {\n      this.viewManager.setProps(newProps);\n    }\n\n    // Update layer manager props (but not size)\n    if (this.layerManager) {\n      this.layerManager.setProps(newProps);\n    }\n\n    if (this.effectManager) {\n      this.effectManager.setProps(newProps);\n    }\n\n    // Update animation loop\n    if (this.animationLoop) {\n      this.animationLoop.setProps(newProps);\n    }\n\n    if (this.deckRenderer) {\n      this.deckRenderer.setProps(newProps);\n    }\n\n    if (this.deckPicker) {\n      this.deckPicker.setProps(newProps);\n    }\n\n    this.stats.get('setProps Time').timeEnd();\n  }\n\n  // Public API\n  // Check if a redraw is needed\n  // Returns `false` or a string summarizing the redraw reason\n  // opts.clearRedrawFlags (Boolean) - clear the redraw flag. Default `true`\n  needsRedraw(opts = {clearRedrawFlags: false}) {\n    if (this.props._animate) {\n      return 'Deck._animate';\n    }\n\n    let redraw = this._needsRedraw;\n\n    if (opts.clearRedrawFlags) {\n      this._needsRedraw = false;\n    }\n\n    const viewManagerNeedsRedraw = this.viewManager.needsRedraw(opts);\n    const layerManagerNeedsRedraw = this.layerManager.needsRedraw(opts);\n    const effectManagerNeedsRedraw = this.effectManager.needsRedraw(opts);\n    const deckRendererNeedsRedraw = this.deckRenderer.needsRedraw(opts);\n\n    redraw =\n      redraw ||\n      viewManagerNeedsRedraw ||\n      layerManagerNeedsRedraw ||\n      effectManagerNeedsRedraw ||\n      deckRendererNeedsRedraw;\n    return redraw;\n  }\n\n  redraw(force) {\n    if (!this.layerManager) {\n      // Not yet initialized\n      return;\n    }\n    // If force is falsy, check if we need to redraw\n    const redrawReason = force || this.needsRedraw({clearRedrawFlags: true});\n\n    if (!redrawReason) {\n      return;\n    }\n\n    this.stats.get('Redraw Count').incrementCount();\n    if (this.props._customRender) {\n      this.props._customRender(redrawReason);\n    } else {\n      this._drawLayers(redrawReason);\n    }\n  }\n\n  getViews() {\n    return this.viewManager.views;\n  }\n\n  // Get a set of viewports for a given width and height\n  getViewports(rect) {\n    return this.viewManager.getViewports(rect);\n  }\n\n  pickObject({x, y, radius = 0, layerIds = null}) {\n    this.stats.get('Pick Count').incrementCount();\n    this.stats.get('pickObject Time').timeStart();\n    const layers = this.layerManager.getLayers({layerIds});\n    const activateViewport = this.layerManager.activateViewport;\n    const selectedInfos = this.deckPicker.pickObject({\n      x,\n      y,\n      radius,\n      layers,\n      viewports: this.getViewports({x, y}),\n      activateViewport,\n      mode: 'query',\n      depth: 1\n    }).result;\n    this.stats.get('pickObject Time').timeEnd();\n    return selectedInfos.length ? selectedInfos[0] : null;\n  }\n\n  pickMultipleObjects({x, y, radius = 0, layerIds = null, depth = 10}) {\n    this.stats.get('Pick Count').incrementCount();\n    this.stats.get('pickMultipleObjects Time').timeStart();\n    const layers = this.layerManager.getLayers({layerIds});\n    const activateViewport = this.layerManager.activateViewport;\n    const selectedInfos = this.deckPicker.pickObject({\n      x,\n      y,\n      radius,\n      layers,\n      viewports: this.getViewports({x, y}),\n      activateViewport,\n      mode: 'query',\n      depth\n    }).result;\n    this.stats.get('pickMultipleObjects Time').timeEnd();\n    return selectedInfos;\n  }\n\n  pickObjects({x, y, width = 1, height = 1, layerIds = null}) {\n    this.stats.get('Pick Count').incrementCount();\n    this.stats.get('pickObjects Time').timeStart();\n    const layers = this.layerManager.getLayers({layerIds});\n    const activateViewport = this.layerManager.activateViewport;\n    const infos = this.deckPicker.pickObjects({\n      x,\n      y,\n      width,\n      height,\n      layers,\n      viewports: this.getViewports({x, y, width, height}),\n      activateViewport\n    });\n    this.stats.get('pickObjects Time').timeEnd();\n    return infos;\n  }\n\n  // Private Methods\n\n  // canvas, either string, canvas or `null`\n  _createCanvas(props) {\n    let canvas = props.canvas;\n\n    // TODO EventManager should accept element id\n    if (typeof canvas === 'string') {\n      /* global document */\n      canvas = document.getElementById(canvas);\n      assert(canvas);\n    }\n\n    if (!canvas) {\n      canvas = document.createElement('canvas');\n      const parent = props.parent || document.body;\n      parent.appendChild(canvas);\n    }\n\n    const {id, style} = props;\n    canvas.id = id;\n    Object.assign(canvas.style, style);\n\n    return canvas;\n  }\n\n  // Updates canvas width and/or height, if provided as props\n  _setCanvasSize(props) {\n    if (!this.canvas) {\n      return;\n    }\n\n    let {width, height} = props;\n    // Set size ONLY if props are being provided, otherwise let canvas be layouted freely\n    if (width || width === 0) {\n      width = Number.isFinite(width) ? `${width}px` : width;\n      this.canvas.style.width = width;\n    }\n    if (height || height === 0) {\n      height = Number.isFinite(height) ? `${height}px` : height;\n      // Note: position==='absolute' required for height 100% to work\n      this.canvas.style.position = 'absolute';\n      this.canvas.style.height = height;\n    }\n  }\n\n  // If canvas size has changed, updates\n  _updateCanvasSize() {\n    if (this._checkForCanvasSizeChange()) {\n      const {width, height} = this;\n      this.viewManager.setProps({width, height});\n      this.props.onResize({width: this.width, height: this.height});\n    }\n  }\n\n  // If canvas size has changed, reads out the new size and returns true\n  _checkForCanvasSizeChange() {\n    const {canvas} = this;\n    if (!canvas) {\n      return false;\n    }\n    // Fallback to width/height when clientWidth/clientHeight are 0 or undefined.\n    const newWidth = canvas.clientWidth || canvas.width;\n    const newHeight = canvas.clientHeight || canvas.height;\n    if (newWidth !== this.width || newHeight !== this.height) {\n      this.width = newWidth;\n      this.height = newHeight;\n      return true;\n    }\n    return false;\n  }\n\n  _createAnimationLoop(props) {\n    const {width, height, gl, glOptions, debug, useDevicePixels, autoResizeDrawingBuffer} = props;\n\n    return new AnimationLoop({\n      width,\n      height,\n      useDevicePixels,\n      autoResizeDrawingBuffer,\n      gl,\n      onCreateContext: opts =>\n        createGLContext(Object.assign({}, glOptions, opts, {canvas: this.canvas, debug})),\n      onInitialize: this._onRendererInitialized,\n      onRender: this._onRenderFrame,\n      onBeforeRender: props.onBeforeRender,\n      onAfterRender: props.onAfterRender\n    });\n  }\n\n  // Get the most relevant view state: props.viewState, if supplied, shadows internal viewState\n  // TODO: For backwards compatibility ensure numeric width and height is added to the viewState\n  _getViewState(props) {\n    return props.viewState || this.viewState;\n  }\n\n  // Get the view descriptor list\n  _getViews(props) {\n    // Default to a full screen map view port\n    let views = props.views || [new MapView({id: 'default-view'})];\n    views = Array.isArray(views) ? views : [views];\n    if (views.length && props.controller) {\n      // Backward compatibility: support controller prop\n      views[0].props.controller = props.controller;\n    }\n    return views;\n  }\n\n  // The `pointermove` event may fire multiple times in between two animation frames,\n  // it's a waste of time to run picking without rerender. Instead we save the last pick\n  // request and only do it once on the next animation frame.\n  _onPointerMove(event) {\n    const {_pickRequest} = this;\n    if (event.type === 'pointerleave') {\n      _pickRequest.x = -1;\n      _pickRequest.y = -1;\n      _pickRequest.radius = 0;\n    } else if (event.leftButton || event.rightButton) {\n      // Do not trigger onHover callbacks if mouse button is down.\n      return;\n    } else {\n      const pos = event.offsetCenter;\n      // Do not trigger callbacks when click/hover position is invalid. Doing so will cause a\n      // assertion error when attempting to unproject the position.\n      if (!pos) {\n        return;\n      }\n      _pickRequest.x = pos.x;\n      _pickRequest.y = pos.y;\n      _pickRequest.radius = this.props.pickingRadius;\n    }\n\n    if (this.layerManager) {\n      this.layerManager.context.mousePosition = {x: _pickRequest.x, y: _pickRequest.y};\n    }\n\n    _pickRequest.callback = this.props.onHover;\n    _pickRequest.event = event;\n    _pickRequest.mode = 'hover';\n  }\n\n  // Actually run picking\n  _pickAndCallback() {\n    const {_pickRequest} = this;\n\n    if (_pickRequest.mode) {\n      // perform picking\n      const {result, emptyInfo} = this.deckPicker.pickObject(\n        Object.assign(\n          {\n            layers: this.layerManager.getLayers(),\n            viewports: this.getViewports(_pickRequest),\n            activateViewport: this.layerManager.activateViewport,\n            depth: 1\n          },\n          _pickRequest\n        )\n      );\n      const shouldGenerateInfo = _pickRequest.callback || this.props.getTooltip;\n      const pickedInfo = shouldGenerateInfo && (result.find(info => info.index >= 0) || emptyInfo);\n      if (this.props.getTooltip) {\n        const displayInfo = this.props.getTooltip(pickedInfo);\n        this.tooltip.setTooltip(displayInfo, pickedInfo.x, pickedInfo.y);\n      }\n      if (_pickRequest.callback) {\n        _pickRequest.callback(pickedInfo, _pickRequest.event);\n      }\n      _pickRequest.mode = null;\n    }\n  }\n\n  _updateCursor() {\n    if (this.canvas) {\n      this.canvas.style.cursor = this.props.getCursor(this.interactiveState);\n    }\n  }\n\n  _setGLContext(gl) {\n    if (this.layerManager) {\n      return;\n    }\n\n    // if external context...\n    if (!this.canvas) {\n      this.canvas = gl.canvas;\n      trackContextState(gl, {enable: true, copyState: true});\n    }\n\n    this.tooltip = new Tooltip(this.canvas);\n\n    setParameters(gl, {\n      blend: true,\n      blendFunc: [GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA, GL.ONE, GL.ONE_MINUS_SRC_ALPHA],\n      polygonOffsetFill: true,\n      depthTest: true,\n      depthFunc: GL.LEQUAL\n    });\n\n    this.props.onWebGLInitialized(gl);\n\n    // timeline for transitions\n    const timeline = new Timeline();\n    timeline.play();\n    this.animationLoop.attachTimeline(timeline);\n\n    this.eventManager = new EventManager(gl.canvas, {\n      touchAction: this.props.touchAction,\n      events: {\n        pointerdown: this._onPointerDown,\n        pointermove: this._onPointerMove,\n        pointerleave: this._onPointerMove\n      }\n    });\n    for (const eventType in EVENTS) {\n      this.eventManager.on(eventType, this._onEvent);\n    }\n\n    this.viewManager = new ViewManager({\n      timeline,\n      eventManager: this.eventManager,\n      onViewStateChange: this._onViewStateChange,\n      onInteractiveStateChange: this._onInteractiveStateChange,\n      views: this._getViews(this.props),\n      viewState: this._getViewState(this.props),\n      width: this.width,\n      height: this.height\n    });\n\n    // viewManager must be initialized before layerManager\n    // layerManager depends on viewport created by viewManager.\n    assert(this.viewManager);\n    const viewport = this.viewManager.getViewports()[0];\n\n    // Note: avoid React setState due GL animation loop / setState timing issue\n    this.layerManager = new LayerManager(gl, {\n      deck: this,\n      stats: this.stats,\n      viewport,\n      timeline\n    });\n\n    this.effectManager = new EffectManager();\n\n    this.deckRenderer = new DeckRenderer(gl);\n\n    this.deckPicker = new DeckPicker(gl);\n\n    this.setProps(this.props);\n\n    this._updateCanvasSize();\n    this.props.onLoad();\n  }\n\n  _drawLayers(redrawReason, renderOptions) {\n    const {gl} = this.layerManager.context;\n\n    setParameters(gl, this.props.parameters);\n\n    this.props.onBeforeRender({gl});\n\n    const layers = this.layerManager.getLayers();\n    const activateViewport = this.layerManager.activateViewport;\n\n    this.deckRenderer.renderLayers(\n      Object.assign(\n        {\n          layers,\n          viewports: this.viewManager.getViewports(),\n          activateViewport,\n          views: this.viewManager.getViews(),\n          pass: 'screen',\n          redrawReason,\n          effects: this.effectManager.getEffects()\n        },\n        renderOptions\n      )\n    );\n\n    this.props.onAfterRender({gl});\n  }\n\n  // Callbacks\n\n  _onRendererInitialized({gl}) {\n    this._setGLContext(gl);\n  }\n\n  _onRenderFrame(animationProps) {\n    this._getFrameStats();\n\n    // Log perf stats every second\n    if (this._metricsCounter++ % 60 === 0) {\n      this._getMetrics();\n      this.stats.reset();\n      log.table(3, this.metrics)();\n\n      // Experimental: report metrics\n      if (this.props._onMetrics) {\n        this.props._onMetrics(this.metrics);\n      }\n    }\n\n    this._updateCanvasSize();\n\n    this._updateCursor();\n\n    // Update layers if needed (e.g. some async prop has loaded)\n    // Note: This can trigger a redraw\n    this.layerManager.updateLayers();\n\n    // Perform picking request if any\n    this._pickAndCallback();\n\n    // Redraw if necessary\n    this.redraw(false);\n\n    // Update viewport transition if needed\n    // Note: this can trigger `onViewStateChange`, and affect layers\n    // We want to defer these changes to the next frame\n    if (this.viewManager) {\n      this.viewManager.updateViewStates();\n    }\n  }\n\n  // Callbacks\n\n  _onViewStateChange(params) {\n    // Let app know that view state is changing, and give it a chance to change it\n    const viewState = this.props.onViewStateChange(params) || params.viewState;\n\n    // If initialViewState was set on creation, auto track position\n    if (this.viewState) {\n      this.viewState[params.viewId] = viewState;\n      this.viewManager.setProps({viewState});\n    }\n  }\n\n  _onInteractiveStateChange({isDragging = false}) {\n    if (isDragging !== this.interactiveState.isDragging) {\n      this.interactiveState.isDragging = isDragging;\n    }\n  }\n\n  _onEvent(event) {\n    const eventOptions = EVENTS[event.type];\n    const pos = event.offsetCenter;\n\n    if (!eventOptions || !pos) {\n      return;\n    }\n\n    // Reuse last picked object\n    const layers = this.layerManager.getLayers();\n    const info = this.deckPicker.getLastPickedObject(\n      {\n        x: pos.x,\n        y: pos.y,\n        layers,\n        viewports: this.getViewports(pos)\n      },\n      this._lastPointerDownInfo\n    );\n\n    const {layer} = info;\n    const layerHandler =\n      layer && (layer[eventOptions.handler] || layer.props[eventOptions.handler]);\n    const rootHandler = this.props[eventOptions.handler];\n    let handled = false;\n\n    if (layerHandler) {\n      handled = layerHandler.call(layer, info, event);\n    }\n    if (!handled && rootHandler) {\n      rootHandler(info, event);\n    }\n  }\n\n  _onPointerDown(event) {\n    const pos = event.offsetCenter;\n    this._lastPointerDownInfo = this.pickObject({\n      x: pos.x,\n      y: pos.y,\n      radius: this.props.pickingRadius\n    });\n  }\n\n  _getFrameStats() {\n    const {stats} = this;\n    stats.get('frameRate').timeEnd();\n    stats.get('frameRate').timeStart();\n\n    // Get individual stats from luma.gl so reset works\n    const animationLoopStats = this.animationLoop.stats;\n    stats.get('GPU Time').addTime(animationLoopStats.get('GPU Time').lastTiming);\n    stats.get('CPU Time').addTime(animationLoopStats.get('CPU Time').lastTiming);\n  }\n\n  _getMetrics() {\n    const {metrics, stats} = this;\n    metrics.fps = stats.get('frameRate').getHz();\n    metrics.setPropsTime = stats.get('setProps Time').time;\n    metrics.updateAttributesTime = stats.get('Update Attributes').time;\n    metrics.framesRedrawn = stats.get('Redraw Count').count;\n    metrics.pickTime =\n      stats.get('pickObject Time').time +\n      stats.get('pickMultipleObjects Time').time +\n      stats.get('pickObjects Time').time;\n    metrics.pickCount = stats.get('Pick Count').count;\n\n    // Luma stats\n    metrics.gpuTime = stats.get('GPU Time').time;\n    metrics.cpuTime = stats.get('CPU Time').time;\n    metrics.gpuTimePerFrame = stats.get('GPU Time').getAverageTime();\n    metrics.cpuTimePerFrame = stats.get('CPU Time').getAverageTime();\n\n    const memoryStats = lumaStats.get('Memory Usage');\n    metrics.bufferMemory = memoryStats.get('Buffer Memory').count;\n    metrics.textureMemory = memoryStats.get('Texture Memory').count;\n    metrics.renderbufferMemory = memoryStats.get('Renderbuffer Memory').count;\n    metrics.gpuMemory = memoryStats.get('GPU Memory').count;\n  }\n}\n\nfunction isIE11() {\n  if (typeof window === undefined) {\n    return false;\n  }\n  const navigator = window.navigator || {};\n  const userAgent = navigator.userAgent || '';\n  return userAgent.indexOf('Trident/') !== -1;\n}\n\nDeck.getPropTypes = getPropTypes;\nDeck.defaultProps = defaultProps;\n\n// This is used to defeat tree shaking of init.js\n// https://github.com/uber/deck.gl/issues/3213\nDeck.VERSION = deckGlobal.VERSION;\n"],"file":"deck.js"}