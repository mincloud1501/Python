{"version":3,"sources":["../../../src/shaderlib/index.js"],"names":["DEFAULT_MODULES","geometry","project","SHADER_HOOKS","MODULE_INJECTIONS","picking","hook","order","injection","initializeShaderModules","fp32","project32","gouraudlighting","phonglighting","createProgramManager","gl","programManager","ProgramManager","getDefaultProgramManager","shaderModule","addDefaultModule","shaderHook","addShaderHook","moduleName","addModuleInjection"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoBA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,eAAe,GAAG,CAACC,oBAAD,EAAWC,mBAAX,CAAxB;AAEA,IAAMC,YAAY,GAAG,CACnB,iEADmB,EAEnB,4EAFmB,EAGnB,mEAHmB,EAInB,qEAJmB,CAArB;AAOA,IAAMC,iBAAiB,GAAG;AACxBC,EAAAA,OAAO,EAAE,CACP;AACEC,IAAAA,IAAI,EAAE,wBADR;AAEEC,IAAAA,KAAK,EAAE,EAFT;AAGEC,IAAAA,SAAS;AAHX,GADO;AADe,CAA1B;;AAgBO,SAASC,uBAAT,GAAmC;AACxC,mCAAsB,CAACC,UAAD,EAAOR,mBAAP,EAAgBS,oBAAhB,EAA2BC,qBAA3B,EAA4CC,mBAA5C,EAA2DR,aAA3D,CAAtB;AACD;;AAEM,SAASS,oBAAT,CAA8BC,EAA9B,EAAkC;AACvC,MAAMC,cAAc,GAAGC,qBAAeC,wBAAf,CAAwCH,EAAxC,CAAvB;;AADuC;AAAA;AAAA;;AAAA;AAGvC,yBAA2Bf,eAA3B,8HAA4C;AAAA,UAAjCmB,YAAiC;AAC1CH,MAAAA,cAAc,CAACI,gBAAf,CAAgCD,YAAhC;AACD;AALsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAMvC,0BAAyBhB,YAAzB,mIAAuC;AAAA,UAA5BkB,UAA4B;AACrCL,MAAAA,cAAc,CAACM,aAAf,CAA6BD,UAA7B;AACD;AARsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASvC,OAAK,IAAME,UAAX,IAAyBnB,iBAAzB,EAA4C;AAAA;AAAA;AAAA;;AAAA;AAC1C,4BAAwBA,iBAAiB,CAACmB,UAAD,CAAzC,mIAAuD;AAAA,YAA5Cf,SAA4C;AACrDQ,QAAAA,cAAc,CAACQ,kBAAf,CAAkCD,UAAlC,EAA8Cf,SAA9C;AACD;AAHyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAI3C;;AAED,SAAOQ,cAAP;AACD","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {registerShaderModules, ProgramManager} from '@luma.gl/core';\nimport {fp32, picking, gouraudlighting, phonglighting} from '@luma.gl/core';\nimport geometry from './misc/geometry';\nimport project from './project/project';\nimport project32 from './project32/project32';\nimport project64 from './project64/project64';\nimport shadow from './shadow/shadow';\n\nconst DEFAULT_MODULES = [geometry, project];\n\nconst SHADER_HOOKS = [\n  'vs:DECKGL_FILTER_SIZE(inout vec3 size, VertexGeometry geometry)',\n  'vs:DECKGL_FILTER_GL_POSITION(inout vec4 position, VertexGeometry geometry)',\n  'vs:DECKGL_FILTER_COLOR(inout vec4 color, VertexGeometry geometry)',\n  'fs:DECKGL_FILTER_COLOR(inout vec4 color, FragmentGeometry geometry)'\n];\n\nconst MODULE_INJECTIONS = {\n  picking: [\n    {\n      hook: 'fs:DECKGL_FILTER_COLOR',\n      order: 99,\n      injection: `\n    // use highlight color if this fragment belongs to the selected object.\n    color = picking_filterHighlightColor(color);\n\n    // use picking color if rendering to picking FBO.\n    color = picking_filterPickingColor(color);\n  `\n    }\n  ]\n};\n\nexport function initializeShaderModules() {\n  registerShaderModules([fp32, project, project32, gouraudlighting, phonglighting, picking]);\n}\n\nexport function createProgramManager(gl) {\n  const programManager = ProgramManager.getDefaultProgramManager(gl);\n\n  for (const shaderModule of DEFAULT_MODULES) {\n    programManager.addDefaultModule(shaderModule);\n  }\n  for (const shaderHook of SHADER_HOOKS) {\n    programManager.addShaderHook(shaderHook);\n  }\n  for (const moduleName in MODULE_INJECTIONS) {\n    for (const injection of MODULE_INJECTIONS[moduleName]) {\n      programManager.addModuleInjection(moduleName, injection);\n    }\n  }\n\n  return programManager;\n}\n\nexport {picking, project, project64, gouraudlighting, phonglighting, shadow};\n"],"file":"index.js"}