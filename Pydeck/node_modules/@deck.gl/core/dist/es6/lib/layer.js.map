{"version":3,"sources":["../../../src/lib/layer.js"],"names":["COORDINATE_SYSTEM","AttributeManager","removeLayerInSeer","UniformTransitionManager","diffProps","validateProps","count","log","withParameters","assert","mergeShaders","projectPosition","getWorldPosition","Component","LayerState","worldToPixels","load","LOG_PRIORITY_UPDATE","EMPTY_ARRAY","Object","freeze","pickingColorCache","Uint8ClampedArray","defaultProps","data","type","value","async","dataComparator","_dataDiff","__diff","compare","optional","dataTransform","onDataLoad","fetch","url","layer","getLoadOptions","updateTriggers","numInstances","undefined","visible","pickable","opacity","min","max","onHover","onClick","onDragStart","onDrag","onDragEnd","coordinateSystem","LNGLAT","coordinateOrigin","modelMatrix","wrapLongitude","positionFormat","colorFormat","parameters","uniforms","extensions","framebuffer","animation","getPolygonOffset","layerIndex","highlightedObjectIndex","autoHighlight","highlightColor","Layer","toString","className","constructor","layerName","name","props","id","setState","updateObject","setChangeFlags","stateChanged","assign","state","setNeedsRedraw","redraw","internalState","needsRedraw","setNeedsUpdate","context","layerManager","String","needsUpdate","getNeedsRedraw","opts","clearRedrawFlags","_getNeedsRedraw","hasUniformTransition","shouldUpdateState","_getUpdateParams","uniformTransitions","active","isPickable","getModels","models","model","getSingleModel","getAttributeManager","attributeManager","getCurrentLayer","loadOptions","getFirstObject","object","project","xyz","viewport","worldPosition","x","y","z","pixelProjectionMatrix","length","unproject","xy","Array","isArray","projectFlat","lngLat","deprecated","unprojectFlat","use64bitPositions","IDENTITY","info","pickingEvent","nullPickingColor","encodePickingColor","i","target","decodePickingColor","color","Uint8Array","i1","i2","i3","index","initializeState","Error","getShaders","shaders","extension","call","oldProps","changeFlags","propsOrDataChanged","updateState","dataChanged","dataRange","invalidateAll","finalizeState","delete","finalize","clear","draw","getPickingInfo","mode","invalidateAttribute","diffReason","invalidate","updateAttributes","changedAttributes","_setModelAttributes","_updateAttributes","getNumInstances","bufferLayout","getBufferLayout","update","transitions","buffers","ignoreUnknownAttributes","getChangedAttributes","clearChangedFlags","_updateAttributeTransition","updateTransition","_updateUniformTransition","propsInTransition","create","key","defineProperty","calculateInstancePickingColors","attribute","startRow","endRow","size","cacheSize","newPickingColorCache","set","pickingColor","Math","subarray","shaderAttributes","excludeAttributes","userData","attributeName","getShaderAttributes","setAttributes","clearPickingColor","pickingColors","instancePickingColors","attributes","colors","start","getVertexOffset","end","buffer","subData","offset","restorePickingColors","_initialize","_initState","propsChanged","viewportChanged","extensionsChanged","_updateState","program","_update","stateNeedsUpdate","currentProps","updateParams","gl","error","isComposite","_renderLayers","setInstanceCount","clearChangeFlags","resetOldProps","_finalize","drawLayer","moduleParameters","pow","setModuleParameters","offsets","polygonOffset","pickLayer","getChangeFlags","flags","updateTriggersChanged","keys","join","somethingChanged","printChangeFlags","newProps","_activeUpdateTrigger","transitionsChanged","add","updateModuleSettings","getOldProps","attributeManagerNeedsRedraw","_getAttributeManager","stats","timeline","addInstanced","onAsyncPropUpdated","_onAsyncPropUpdated","bind","setAsyncProps","_transferState","oldLayer","component","propName","setLayerNeedsUpdate","setUniforms","uniformMap","use64bitProjection","removed"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint-disable react/no-direct-mutation-state */\nimport {COORDINATE_SYSTEM} from './constants';\nimport AttributeManager from './attribute-manager';\nimport {removeLayerInSeer} from './seer-integration';\nimport UniformTransitionManager from './uniform-transition-manager';\nimport {diffProps, validateProps} from '../lifecycle/props';\nimport {count} from '../utils/count';\nimport log from '../utils/log';\nimport GL from '@luma.gl/constants';\nimport {withParameters} from '@luma.gl/core';\nimport assert from '../utils/assert';\nimport {mergeShaders} from '../utils/shader';\nimport {projectPosition, getWorldPosition} from '../shaderlib/project/project-functions';\n\nimport Component from '../lifecycle/component';\nimport LayerState from './layer-state';\n\nimport {worldToPixels} from 'viewport-mercator-project';\n\nimport {load} from '@loaders.gl/core';\n\nconst LOG_PRIORITY_UPDATE = 1;\n\nconst EMPTY_ARRAY = Object.freeze([]);\n\nlet pickingColorCache = new Uint8ClampedArray(0);\n\nconst defaultProps = {\n  // data: Special handling for null, see below\n  data: {type: 'data', value: EMPTY_ARRAY, async: true},\n  dataComparator: null,\n  _dataDiff: {type: 'function', value: data => data && data.__diff, compare: false, optional: true},\n  dataTransform: {type: 'function', value: null, compare: false, optional: true},\n  onDataLoad: {type: 'function', value: null, compare: false, optional: true},\n  fetch: {\n    type: 'function',\n    value: (url, {layer}) => load(url, layer.getLoadOptions()),\n    compare: false\n  },\n  updateTriggers: {}, // Update triggers: a core change detection mechanism in deck.gl\n  numInstances: undefined,\n\n  visible: true,\n  pickable: false,\n  opacity: {type: 'number', min: 0, max: 1, value: 0.8},\n\n  onHover: {type: 'function', value: null, compare: false, optional: true},\n  onClick: {type: 'function', value: null, compare: false, optional: true},\n  onDragStart: {type: 'function', value: null, compare: false, optional: true},\n  onDrag: {type: 'function', value: null, compare: false, optional: true},\n  onDragEnd: {type: 'function', value: null, compare: false, optional: true},\n\n  coordinateSystem: COORDINATE_SYSTEM.LNGLAT,\n  coordinateOrigin: {type: 'array', value: [0, 0, 0], compare: true},\n  modelMatrix: {type: 'array', value: null, compare: true, optional: true},\n  wrapLongitude: false,\n  positionFormat: 'XYZ',\n  colorFormat: 'RGBA',\n\n  parameters: {},\n  uniforms: {},\n  extensions: [],\n  framebuffer: null,\n\n  animation: null, // Passed prop animation functions to evaluate props\n\n  // Offset depth based on layer index to avoid z-fighting.\n  // Negative values pull layer towards the camera\n  // https://www.opengl.org/archives/resources/faq/technical/polygonoffset.htm\n  getPolygonOffset: {\n    type: 'function',\n    value: ({layerIndex}) => [0, -layerIndex * 100],\n    compare: false\n  },\n\n  // Selection/Highlighting\n  highlightedObjectIndex: null,\n  autoHighlight: false,\n  highlightColor: {type: 'color', value: [0, 0, 128, 128]}\n};\n\nexport default class Layer extends Component {\n  toString() {\n    const className = this.constructor.layerName || this.constructor.name;\n    return `${className}({id: '${this.props.id}'})`;\n  }\n\n  // Public API\n\n  // Updates selected state members and marks the object for redraw\n  setState(updateObject) {\n    this.setChangeFlags({stateChanged: true});\n    Object.assign(this.state, updateObject);\n    this.setNeedsRedraw();\n  }\n\n  // Sets the redraw flag for this layer, will trigger a redraw next animation frame\n  setNeedsRedraw(redraw = true) {\n    if (this.internalState) {\n      this.internalState.needsRedraw = redraw;\n    }\n  }\n\n  // This layer needs a deep update\n  setNeedsUpdate() {\n    this.context.layerManager.setNeedsUpdate(String(this));\n    this.internalState.needsUpdate = true;\n  }\n\n  // Checks state of attributes and model\n  getNeedsRedraw(opts = {clearRedrawFlags: false}) {\n    return this._getNeedsRedraw(opts);\n  }\n\n  // Checks if layer attributes needs updating\n  needsUpdate() {\n    // Call subclass lifecycle method\n    return (\n      this.internalState.needsUpdate ||\n      this.hasUniformTransition() ||\n      this.shouldUpdateState(this._getUpdateParams())\n    );\n    // End lifecycle method\n  }\n\n  hasUniformTransition() {\n    return this.internalState.uniformTransitions.active;\n  }\n\n  // Returns true if the layer is pickable and visible.\n  isPickable() {\n    return this.props.pickable && this.props.visible;\n  }\n\n  // Return an array of models used by this layer, can be overriden by layer subclass\n  getModels() {\n    return this.state && (this.state.models || (this.state.model ? [this.state.model] : []));\n  }\n\n  // TODO - Gradually phase out, does not support multi model layers\n  getSingleModel() {\n    return this.state && this.state.model;\n  }\n\n  getAttributeManager() {\n    return this.internalState && this.internalState.attributeManager;\n  }\n\n  // Returns the most recent layer that matched to this state\n  // (When reacting to an async event, this layer may no longer be the latest)\n  getCurrentLayer() {\n    return this.internalState && this.internalState.layer;\n  }\n\n  // Returns the default parse options for async props\n  getLoadOptions() {\n    return this.props.loadOptions;\n  }\n\n  // Use iteration (the only required capability on data) to get first element\n  // deprecated since we are effectively only supporting Arrays\n  getFirstObject() {\n    const {data} = this.props;\n    for (const object of data) {\n      return object;\n    }\n    return null;\n  }\n\n  // PROJECTION METHODS\n\n  // Projects a point with current map state (lat, lon, zoom, pitch, bearing)\n  // From the current layer's coordinate system to screen\n  project(xyz) {\n    const {viewport} = this.context;\n    const worldPosition = getWorldPosition(xyz, {\n      viewport,\n      modelMatrix: this.props.modelMatrix,\n      coordinateOrigin: this.props.coordinateOrigin,\n      coordinateSystem: this.props.coordinateSystem\n    });\n    const [x, y, z] = worldToPixels(worldPosition, viewport.pixelProjectionMatrix);\n    return xyz.length === 2 ? [x, y] : [x, y, z];\n  }\n\n  // Note: this does not reverse `project`.\n  // Always unprojects to the viewport's coordinate system\n  unproject(xy) {\n    const {viewport} = this.context;\n    assert(Array.isArray(xy));\n    return viewport.unproject(xy);\n  }\n\n  projectPosition(xyz) {\n    assert(Array.isArray(xyz));\n\n    return projectPosition(xyz, {\n      viewport: this.context.viewport,\n      modelMatrix: this.props.modelMatrix,\n      coordinateOrigin: this.props.coordinateOrigin,\n      coordinateSystem: this.props.coordinateSystem\n    });\n  }\n\n  // DEPRECATE: This does not handle offset modes\n  projectFlat(lngLat) {\n    log.deprecated('layer.projectFlat', 'layer.projectPosition')();\n    const {viewport} = this.context;\n    assert(Array.isArray(lngLat));\n    return viewport.projectFlat(lngLat);\n  }\n\n  // DEPRECATE: This is not meaningful in offset modes\n  unprojectFlat(xy) {\n    log.deprecated('layer.unprojectFlat')();\n    const {viewport} = this.context;\n    assert(Array.isArray(xy));\n    return viewport.unprojectFlat(xy);\n  }\n\n  use64bitPositions() {\n    return (\n      this.props.coordinateSystem === COORDINATE_SYSTEM.LNGLAT ||\n      this.props.coordinateSystem === COORDINATE_SYSTEM.IDENTITY\n    );\n  }\n\n  // Event handling\n  onHover(info, pickingEvent) {\n    if (this.props.onHover) {\n      return this.props.onHover(info, pickingEvent);\n    }\n    return false;\n  }\n\n  onClick(info, pickingEvent) {\n    if (this.props.onClick) {\n      return this.props.onClick(info, pickingEvent);\n    }\n    return false;\n  }\n\n  // Returns the picking color that doesn't match any subfeature\n  // Use if some graphics do not belong to any pickable subfeature\n  // @return {Array} - a black color\n  nullPickingColor() {\n    return [0, 0, 0];\n  }\n\n  // Returns the picking color that doesn't match any subfeature\n  // Use if some graphics do not belong to any pickable subfeature\n  encodePickingColor(i, target = []) {\n    assert(i < 16777215, 'index out of picking color range');\n    target[0] = (i + 1) & 255;\n    target[1] = ((i + 1) >> 8) & 255;\n    target[2] = (((i + 1) >> 8) >> 8) & 255;\n    return target;\n  }\n\n  // Returns the index corresponding to a picking color that doesn't match any subfeature\n  // @param {Uint8Array} color - color array to be decoded\n  // @return {Array} - the decoded picking color\n  decodePickingColor(color) {\n    assert(color instanceof Uint8Array);\n    const [i1, i2, i3] = color;\n    // 1 was added to seperate from no selection\n    const index = i1 + i2 * 256 + i3 * 65536 - 1;\n    return index;\n  }\n\n  // //////////////////////////////////////////////////\n  // LIFECYCLE METHODS, overridden by the layer subclasses\n\n  // Called once to set up the initial state\n  // App can create WebGL resources\n  initializeState() {\n    throw new Error(`Layer ${this} has not defined initializeState`);\n  }\n\n  getShaders(shaders) {\n    for (const extension of this.props.extensions) {\n      shaders = mergeShaders(shaders, extension.getShaders.call(this, extension));\n    }\n    return shaders;\n  }\n\n  // Let's layer control if updateState should be called\n  shouldUpdateState({oldProps, props, context, changeFlags}) {\n    return changeFlags.propsOrDataChanged;\n  }\n\n  // Default implementation, all attributes will be invalidated and updated\n  // when data changes\n  updateState({oldProps, props, context, changeFlags}) {\n    const attributeManager = this.getAttributeManager();\n    if (changeFlags.dataChanged && attributeManager) {\n      const {dataChanged} = changeFlags;\n      if (Array.isArray(dataChanged)) {\n        // is partial update\n        for (const dataRange of dataChanged) {\n          attributeManager.invalidateAll(dataRange);\n        }\n      } else {\n        attributeManager.invalidateAll();\n      }\n    }\n  }\n\n  // Called once when layer is no longer matched and state will be discarded\n  // App can destroy WebGL resources here\n  finalizeState() {\n    for (const model of this.getModels()) {\n      model.delete();\n    }\n    const attributeManager = this.getAttributeManager();\n    if (attributeManager) {\n      attributeManager.finalize();\n    }\n    this.internalState.uniformTransitions.clear();\n  }\n\n  // If state has a model, draw it with supplied uniforms\n  draw(opts) {\n    for (const model of this.getModels()) {\n      model.draw(opts);\n    }\n  }\n\n  // called to populate the info object that is passed to the event handler\n  // @return null to cancel event\n  getPickingInfo({info, mode}) {\n    const {index} = info;\n\n    if (index >= 0) {\n      // If props.data is an indexable array, get the object\n      if (Array.isArray(this.props.data)) {\n        info.object = this.props.data[index];\n      }\n    }\n\n    return info;\n  }\n\n  // END LIFECYCLE METHODS\n  // //////////////////////////////////////////////////\n\n  // INTERNAL METHODS\n\n  // Default implementation of attribute invalidation, can be redefined\n  invalidateAttribute(name = 'all', diffReason = '') {\n    const attributeManager = this.getAttributeManager();\n    if (!attributeManager) {\n      return;\n    }\n\n    if (name === 'all') {\n      log.log(LOG_PRIORITY_UPDATE, `updateTriggers invalidating all attributes: ${diffReason}`)();\n      attributeManager.invalidateAll();\n    } else {\n      log.log(\n        LOG_PRIORITY_UPDATE,\n        `updateTriggers invalidating attribute ${name}: ${diffReason}`\n      )();\n      attributeManager.invalidate(name);\n    }\n  }\n\n  updateAttributes(changedAttributes) {\n    for (const model of this.getModels()) {\n      this._setModelAttributes(model, changedAttributes);\n    }\n  }\n\n  // Calls attribute manager to update any WebGL attributes\n  _updateAttributes(props) {\n    const attributeManager = this.getAttributeManager();\n    if (!attributeManager) {\n      return;\n    }\n\n    // Figure out data length\n    const numInstances = this.getNumInstances(props);\n    const bufferLayout = this.getBufferLayout(props);\n\n    attributeManager.update({\n      data: props.data,\n      numInstances,\n      bufferLayout,\n      props,\n      transitions: props.transitions,\n      buffers: props,\n      context: this,\n      // Don't worry about non-attribute props\n      ignoreUnknownAttributes: true\n    });\n\n    const changedAttributes = attributeManager.getChangedAttributes({clearChangedFlags: true});\n    this.updateAttributes(changedAttributes);\n  }\n\n  // Update attribute transitions. This is called in drawLayer, no model updates required.\n  _updateAttributeTransition() {\n    const attributeManager = this.getAttributeManager();\n    if (attributeManager) {\n      attributeManager.updateTransition();\n    }\n  }\n\n  // Update uniform (prop) transitions. This is called in updateState, may result in model updates.\n  _updateUniformTransition() {\n    const {uniformTransitions} = this.internalState;\n    if (uniformTransitions.active) {\n      // clone props\n      const propsInTransition = uniformTransitions.update();\n      const props = Object.create(this.props);\n      for (const key in propsInTransition) {\n        Object.defineProperty(props, key, {value: propsInTransition[key]});\n      }\n      return props;\n    }\n    return this.props;\n  }\n\n  calculateInstancePickingColors(attribute, {numInstances, startRow, endRow}) {\n    const {value, size} = attribute;\n\n    // calculateInstancePickingColors always generates the same sequence.\n    // pickingColorCache saves the largest generated sequence for reuse\n    const cacheSize = pickingColorCache.length / size;\n\n    if (cacheSize < numInstances) {\n      // If the attribute is larger than the cache, resize the cache and populate the missing chunk\n      const newPickingColorCache = new Uint8ClampedArray(numInstances * size);\n      newPickingColorCache.set(pickingColorCache);\n      const pickingColor = [];\n\n      for (let i = cacheSize; i < numInstances; i++) {\n        this.encodePickingColor(i, pickingColor);\n        newPickingColorCache[i * size + 0] = pickingColor[0];\n        newPickingColorCache[i * size + 1] = pickingColor[1];\n        newPickingColorCache[i * size + 2] = pickingColor[2];\n      }\n\n      pickingColorCache = newPickingColorCache;\n    }\n\n    // Copy the last calculated picking color sequence into the attribute\n    endRow = Math.min(endRow, numInstances);\n    value.set(pickingColorCache.subarray(startRow * size, endRow * size), startRow * size);\n  }\n\n  _setModelAttributes(model, changedAttributes) {\n    const shaderAttributes = {};\n    const excludeAttributes = model.userData.excludeAttributes || {};\n    for (const attributeName in changedAttributes) {\n      if (!excludeAttributes[attributeName]) {\n        Object.assign(shaderAttributes, changedAttributes[attributeName].getShaderAttributes());\n      }\n    }\n\n    model.setAttributes(shaderAttributes);\n  }\n\n  // Sets the specified instanced picking color to null picking color. Used for multi picking.\n  clearPickingColor(color) {\n    const {pickingColors, instancePickingColors} = this.getAttributeManager().attributes;\n    const colors = pickingColors || instancePickingColors;\n\n    const i = this.decodePickingColor(color);\n    const start = colors.getVertexOffset(i);\n    const end = colors.getVertexOffset(i + 1);\n\n    // Fill the sub buffer with 0s\n    colors.buffer.subData({\n      data: new Uint8Array(end - start),\n      offset: start // 1 byte per element\n    });\n  }\n\n  restorePickingColors() {\n    const {pickingColors, instancePickingColors} = this.getAttributeManager().attributes;\n    const colors = pickingColors || instancePickingColors;\n    colors.update({value: colors.value});\n  }\n\n  // Deduces numer of instances. Intention is to support:\n  // - Explicit setting of numInstances\n  // - Auto-deduction for ES6 containers that define a size member\n  // - Auto-deduction for Classic Arrays via the built-in length attribute\n  // - Auto-deduction via arrays\n  getNumInstances(props) {\n    props = props || this.props;\n\n    // First Check if app has provided an explicit value\n    if (props.numInstances !== undefined) {\n      return props.numInstances;\n    }\n\n    // Second check if the layer has set its own value\n    if (this.state && this.state.numInstances !== undefined) {\n      return this.state.numInstances;\n    }\n\n    // Use container library to get a count for any ES6 container or object\n    const {data} = this.props;\n    return count(data);\n  }\n\n  // Buffer layout describes how many attribute values are packed for each data object\n  // The default (null) is one value each object.\n  // Some data formats (e.g. paths, polygons) have various length. Their buffer layout\n  //  is in the form of [L0, L1, L2, ...]\n  getBufferLayout(props) {\n    props = props || this.props;\n\n    // First Check if bufferLayout is provided as an explicit value\n    if (props.bufferLayout !== undefined) {\n      return props.bufferLayout;\n    }\n\n    // Second check if the layer has set its own value\n    if (this.state && this.state.bufferLayout !== undefined) {\n      return this.state.bufferLayout;\n    }\n\n    return null;\n  }\n\n  // LAYER MANAGER API\n  // Should only be called by the deck.gl LayerManager class\n\n  // Called by layer manager when a new layer is found\n  /* eslint-disable max-statements */\n  _initialize() {\n    this._initState();\n\n    // Call subclass lifecycle methods\n    this.initializeState(this.context);\n    // Initialize extensions\n    for (const extension of this.props.extensions) {\n      extension.initializeState.call(this, this.context, extension);\n    }\n    // End subclass lifecycle methods\n\n    // TODO deprecated, for backwards compatibility with older layers\n    // in case layer resets state\n    this.state.attributeManager = this.getAttributeManager();\n\n    // initializeState callback tends to clear state\n    this.setChangeFlags({\n      dataChanged: true,\n      propsChanged: true,\n      viewportChanged: true,\n      extensionsChanged: true\n    });\n\n    this._updateState();\n\n    const model = this.getSingleModel();\n    if (model) {\n      model.id = this.props.id;\n      model.program.id = `${this.props.id}-program`;\n    }\n  }\n\n  // Called by layer manager\n  // if this layer is new (not matched with an existing layer) oldProps will be empty object\n  _update() {\n    // Call subclass lifecycle method\n    const stateNeedsUpdate = this.needsUpdate();\n    // End lifecycle method\n\n    if (stateNeedsUpdate) {\n      this._updateState();\n    }\n  }\n  /* eslint-enable max-statements */\n\n  // Common code for _initialize and _update\n  _updateState() {\n    const currentProps = this.props;\n    const propsInTransition = this._updateUniformTransition();\n    this.internalState.propsInTransition = propsInTransition;\n    // Overwrite this.props during update to use in-transition prop values\n    this.props = propsInTransition;\n\n    const updateParams = this._getUpdateParams();\n\n    // Safely call subclass lifecycle methods\n    if (this.context.gl) {\n      this.updateState(updateParams);\n    } else {\n      try {\n        this.updateState(updateParams);\n      } catch (error) {\n        // ignore error if gl context is missing\n      }\n    }\n    // Execute extension updates\n    for (const extension of this.props.extensions) {\n      extension.updateState.call(this, updateParams, extension);\n    }\n    // End subclass lifecycle methods\n\n    if (this.isComposite) {\n      // Render or update previously rendered sublayers\n      this._renderLayers(updateParams);\n    } else {\n      this.setNeedsRedraw();\n      // Add any subclass attributes\n      this._updateAttributes(this.props);\n\n      // Note: Automatic instance count update only works for single layers\n      if (this.state.model) {\n        this.state.model.setInstanceCount(this.getNumInstances());\n      }\n    }\n\n    this.props = currentProps;\n    this.clearChangeFlags();\n    this.internalState.needsUpdate = false;\n    this.internalState.resetOldProps();\n  }\n\n  // Called by manager when layer is about to be disposed\n  // Note: not guaranteed to be called on application shutdown\n  _finalize() {\n    assert(this.internalState && this.state);\n\n    // Call subclass lifecycle method\n    this.finalizeState(this.context);\n    // Finalize extensions\n    for (const extension of this.props.extensions) {\n      extension.finalizeState.call(this, extension);\n    }\n    // End lifecycle method\n    removeLayerInSeer(this.id);\n  }\n\n  // Calculates uniforms\n  drawLayer({moduleParameters = null, uniforms = {}, parameters = {}}) {\n    this._updateAttributeTransition();\n\n    const currentProps = this.props;\n    // Overwrite this.props during redraw to use in-transition prop values\n    this.props = this.internalState.propsInTransition;\n\n    const {opacity} = this.props;\n    // apply gamma to opacity to make it visually \"linear\"\n    uniforms.opacity = Math.pow(opacity, 1 / 2.2);\n\n    // TODO/ib - hack move to luma Model.draw\n    if (moduleParameters) {\n      this.setModuleParameters(moduleParameters);\n    }\n\n    // Apply polygon offset to avoid z-fighting\n    // TODO - move to draw-layers\n    const {getPolygonOffset} = this.props;\n    const offsets = (getPolygonOffset && getPolygonOffset(uniforms)) || [0, 0];\n    parameters.polygonOffset = offsets;\n\n    // Call subclass lifecycle method\n    withParameters(this.context.gl, parameters, () => {\n      this.draw({moduleParameters, uniforms, parameters, context: this.context});\n    });\n    // End lifecycle method\n\n    this.props = currentProps;\n  }\n\n  // {uniforms = {}, ...opts}\n  pickLayer(opts) {\n    // Call subclass lifecycle method\n    return this.getPickingInfo(opts);\n    // End lifecycle method\n  }\n\n  // Helper methods\n  getChangeFlags() {\n    return this.internalState.changeFlags;\n  }\n\n  // Dirty some change flags, will be handled by updateLayer\n  /* eslint-disable complexity */\n  setChangeFlags(flags) {\n    this.internalState.changeFlags = this.internalState.changeFlags || {};\n    const changeFlags = this.internalState.changeFlags;\n\n    // Update primary flags\n    if (flags.dataChanged && !changeFlags.dataChanged) {\n      changeFlags.dataChanged = flags.dataChanged;\n      log.log(LOG_PRIORITY_UPDATE + 1, () => `dataChanged: ${flags.dataChanged} in ${this.id}`)();\n    }\n    if (flags.updateTriggersChanged && !changeFlags.updateTriggersChanged) {\n      changeFlags.updateTriggersChanged =\n        changeFlags.updateTriggersChanged && flags.updateTriggersChanged\n          ? Object.assign({}, flags.updateTriggersChanged, changeFlags.updateTriggersChanged)\n          : flags.updateTriggersChanged || changeFlags.updateTriggersChanged;\n      log.log(\n        LOG_PRIORITY_UPDATE + 1,\n        () =>\n          'updateTriggersChanged: ' +\n          `${Object.keys(flags.updateTriggersChanged).join(', ')} in ${this.id}`\n      )();\n    }\n    if (flags.propsChanged && !changeFlags.propsChanged) {\n      changeFlags.propsChanged = flags.propsChanged;\n      log.log(LOG_PRIORITY_UPDATE + 1, () => `propsChanged: ${flags.propsChanged} in ${this.id}`)();\n    }\n    if (flags.extensionsChanged && !changeFlags.extensionsChanged) {\n      changeFlags.extensionsChanged = flags.extensionsChanged;\n      log.log(\n        LOG_PRIORITY_UPDATE + 1,\n        () => `extensionsChanged: ${flags.extensionsChanged} in ${this.id}`\n      )();\n    }\n    if (flags.viewportChanged && !changeFlags.viewportChanged) {\n      changeFlags.viewportChanged = flags.viewportChanged;\n      log.log(\n        LOG_PRIORITY_UPDATE + 2,\n        () => `viewportChanged: ${flags.viewportChanged} in ${this.id}`\n      )();\n    }\n    if (flags.stateChanged && !changeFlags.stateChanged) {\n      changeFlags.stateChanged = flags.stateChanged;\n      log.log(LOG_PRIORITY_UPDATE + 1, () => `stateChanged: ${flags.stateChanged} in ${this.id}`)();\n    }\n\n    // Update composite flags\n    const propsOrDataChanged =\n      flags.dataChanged ||\n      flags.updateTriggersChanged ||\n      flags.propsChanged ||\n      flags.extensionsChanged;\n    changeFlags.propsOrDataChanged = changeFlags.propsOrDataChanged || propsOrDataChanged;\n    changeFlags.somethingChanged =\n      changeFlags.somethingChanged ||\n      propsOrDataChanged ||\n      flags.viewportChanged ||\n      flags.stateChanged;\n  }\n  /* eslint-enable complexity */\n\n  // Clear all changeFlags, typically after an update\n  clearChangeFlags() {\n    this.internalState.changeFlags = {\n      // Primary changeFlags, can be strings stating reason for change\n      dataChanged: false,\n      propsChanged: false,\n      updateTriggersChanged: false,\n      viewportChanged: false,\n      stateChanged: false,\n      extensionsChanged: false,\n\n      // Derived changeFlags\n      propsOrDataChanged: false,\n      somethingChanged: false\n    };\n  }\n\n  printChangeFlags() {\n    const flags = this.internalState.changeFlags;\n    return `\\\n${flags.dataChanged ? 'data ' : ''}\\\n${flags.propsChanged ? 'props ' : ''}\\\n${flags.updateTriggersChanged ? 'triggers ' : ''}\\\n${flags.viewportChanged ? 'viewport' : ''}\\\n`;\n  }\n\n  // Compares the layers props with old props from a matched older layer\n  // and extracts change flags that describe what has change so that state\n  // can be update correctly with minimal effort\n  diffProps(newProps, oldProps) {\n    const changeFlags = diffProps(newProps, oldProps);\n\n    // iterate over changedTriggers\n    if (changeFlags.updateTriggersChanged) {\n      for (const key in changeFlags.updateTriggersChanged) {\n        if (changeFlags.updateTriggersChanged[key]) {\n          this._activeUpdateTrigger(key);\n        }\n      }\n    }\n\n    // trigger uniform transitions\n    if (changeFlags.transitionsChanged) {\n      for (const key in changeFlags.transitionsChanged) {\n        // prop changed and transition is enabled\n        this.internalState.uniformTransitions.add(\n          key,\n          oldProps[key],\n          newProps[key],\n          newProps.transitions[key]\n        );\n      }\n    }\n\n    return this.setChangeFlags(changeFlags);\n  }\n\n  // Called by layer manager to validate props (in development)\n  validateProps() {\n    validateProps(this.props);\n  }\n\n  setModuleParameters(moduleParameters) {\n    for (const model of this.getModels()) {\n      model.updateModuleSettings(moduleParameters);\n    }\n  }\n\n  // PRIVATE METHODS\n\n  _getUpdateParams() {\n    return {\n      props: this.props,\n      oldProps: this.internalState.getOldProps(),\n      context: this.context,\n      changeFlags: this.internalState.changeFlags\n    };\n  }\n\n  // Checks state of attributes and model\n  _getNeedsRedraw(opts) {\n    // this method may be called by the render loop as soon a the layer\n    // has been created, so guard against uninitialized state\n    if (!this.internalState) {\n      return false;\n    }\n\n    let redraw = false;\n    redraw = redraw || (this.internalState.needsRedraw && this.id);\n    this.internalState.needsRedraw = this.internalState.needsRedraw && !opts.clearRedrawFlags;\n\n    // TODO - is attribute manager needed? - Model should be enough.\n    const attributeManager = this.getAttributeManager();\n    const attributeManagerNeedsRedraw = attributeManager && attributeManager.getNeedsRedraw(opts);\n    redraw = redraw || attributeManagerNeedsRedraw;\n\n    return redraw;\n  }\n\n  // Create new attribute manager\n  _getAttributeManager() {\n    return new AttributeManager(this.context.gl, {\n      id: this.props.id,\n      stats: this.context.stats,\n      timeline: this.context.timeline\n    });\n  }\n\n  _initState() {\n    assert(!this.internalState && !this.state);\n\n    const attributeManager = this._getAttributeManager();\n\n    if (attributeManager) {\n      // All instanced layers get instancePickingColors attribute by default\n      // Their shaders can use it to render a picking scene\n      // TODO - this slightly slows down non instanced layers\n      attributeManager.addInstanced({\n        instancePickingColors: {\n          type: GL.UNSIGNED_BYTE,\n          size: 3,\n          update: this.calculateInstancePickingColors\n        }\n      });\n    }\n\n    this.internalState = new LayerState({\n      attributeManager,\n      layer: this\n    });\n\n    this.state = {};\n    // TODO deprecated, for backwards compatibility with older layers\n    this.state.attributeManager = attributeManager;\n    this.internalState.uniformTransitions = new UniformTransitionManager(this.context.timeline);\n    this.internalState.onAsyncPropUpdated = this._onAsyncPropUpdated.bind(this);\n\n    // Ensure any async props are updated\n    this.internalState.setAsyncProps(this.props);\n  }\n\n  // Called by layer manager to transfer state from an old layer\n  _transferState(oldLayer) {\n    const {state, internalState} = oldLayer;\n    assert(state && internalState);\n\n    if (this === oldLayer) {\n      return;\n    }\n\n    // Move internalState\n    this.internalState = internalState;\n    this.internalState.component = this;\n\n    // Move state\n    this.state = state;\n    // Deprecated: layer references on `state`\n    state.layer = this;\n    // We keep the state ref on old layers to support async actions\n    // oldLayer.state = null;\n\n    // Ensure any async props are updated\n    this.internalState.setAsyncProps(this.props);\n\n    // Update model layer reference\n    for (const model of this.getModels()) {\n      model.userData.layer = this;\n    }\n\n    this.diffProps(this.props, this.internalState.getOldProps());\n  }\n\n  _onAsyncPropUpdated() {\n    this.diffProps(this.props, this.internalState.getOldProps());\n    this.setNeedsUpdate();\n  }\n\n  // Operate on each changed triggers, will be called when an updateTrigger changes\n  _activeUpdateTrigger(propName) {\n    this.invalidateAttribute(propName);\n  }\n\n  // DEPRECATED METHODS\n\n  // TODO - remove in v8\n  setLayerNeedsUpdate() {\n    log.deprecated('layer.setLayerNeedsUpdate', 'layer.setNeedsUpdate')();\n    this.setNeedsUpdate();\n  }\n\n  // Updates selected state members and marks the object for redraw\n  setUniforms(uniformMap) {\n    for (const model of this.getModels()) {\n      model.setUniforms(uniformMap);\n    }\n\n    // TODO - set needsRedraw on the model(s)?\n    this.setNeedsRedraw();\n    log.deprecated('layer.setUniforms', 'model.setUniforms')();\n  }\n\n  use64bitProjection() {\n    log.removed('use64bitProjection', 'Fp64Extension')();\n    return false;\n  }\n}\n\nLayer.layerName = 'Layer';\nLayer.defaultProps = defaultProps;\n"],"file":"layer.js"}