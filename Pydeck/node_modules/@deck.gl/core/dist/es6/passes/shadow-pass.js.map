{"version":3,"sources":["../../../src/passes/shadow-pass.js"],"names":["default","LayersPass","Framebuffer","Texture2D","Renderbuffer","withParameters","cssToDeviceRatio","ShadowPass","constructor","gl","props","shadowMap","width","height","parameters","depthBuffer","format","fbo","id","attachments","render","params","target","depthRange","depthTest","blend","clearColor","viewport","viewports","pixelRatio","resize","Object","assign","outputBuffer","getModuleParameters","layer","effects","effectProps","moduleParameters","create","context","pickingActive","drawToShadowMap","devicePixelRatio","delete"],"mappings":"AAAA,SAAQA,OAAO,IAAIC,UAAnB,QAAoC,eAApC;AACA,SACEC,WADF,EAEEC,SAFF,EAGEC,YAHF,EAIEC,cAJF,EAKEC,gBALF,QAMO,eANP;AAQA,eAAe,MAAMC,UAAN,SAAyBN,UAAzB,CAAoC;AACjDO,EAAAA,WAAW,CAACC,EAAD,EAAKC,KAAL,EAAY;AACrB,UAAMD,EAAN,EAAUC,KAAV;AAGA,SAAKC,SAAL,GAAiB,IAAIR,SAAJ,CAAcM,EAAd,EAAkB;AACjCG,MAAAA,KAAK,EAAE,CAD0B;AAEjCC,MAAAA,MAAM,EAAE,CAFyB;AAGjCC,MAAAA,UAAU,EAAE;AACV,qBADU;AAEV,qBAFU;AAGV,sBAHU;AAIV;AAJU;AAHqB,KAAlB,CAAjB;AAWA,SAAKC,WAAL,GAAmB,IAAIX,YAAJ,CAAiBK,EAAjB,EAAqB;AACtCO,MAAAA,MAAM,OADgC;AAEtCJ,MAAAA,KAAK,EAAE,CAF+B;AAGtCC,MAAAA,MAAM,EAAE;AAH8B,KAArB,CAAnB;AAMA,SAAKI,GAAL,GAAW,IAAIf,WAAJ,CAAgBO,EAAhB,EAAoB;AAC7BS,MAAAA,EAAE,EAAE,WADyB;AAE7BN,MAAAA,KAAK,EAAE,CAFsB;AAG7BC,MAAAA,MAAM,EAAE,CAHqB;AAI7BM,MAAAA,WAAW,EAAE;AACX,iBAAwB,KAAKR,SADlB;AAGX,iBAAuB,KAAKI;AAHjB;AAJgB,KAApB,CAAX;AAUD;;AAEDK,EAAAA,MAAM,CAACC,MAAD,EAAS;AACb,UAAMC,MAAM,GAAG,KAAKL,GAApB;AAEAZ,IAAAA,cAAc,CACZ,KAAKI,EADO,EAEZ;AACEc,MAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADd;AAEEC,MAAAA,SAAS,EAAE,IAFb;AAGEC,MAAAA,KAAK,EAAE,KAHT;AAIEC,MAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV;AAJd,KAFY,EAQZ,MAAM;AACJ,YAAMC,QAAQ,GAAGN,MAAM,CAACO,SAAP,CAAiB,CAAjB,CAAjB;AACA,YAAMC,UAAU,GAAGvB,gBAAgB,CAAC,KAAKG,EAAN,CAAnC;AACA,YAAMG,KAAK,GAAGe,QAAQ,CAACf,KAAT,GAAiBiB,UAA/B;AACA,YAAMhB,MAAM,GAAGc,QAAQ,CAACd,MAAT,GAAkBgB,UAAjC;;AACA,UAAIjB,KAAK,KAAKU,MAAM,CAACV,KAAjB,IAA0BC,MAAM,KAAKS,MAAM,CAACT,MAAhD,EAAwD;AACtDS,QAAAA,MAAM,CAACQ,MAAP,CAAc;AAAClB,UAAAA,KAAD;AAAQC,UAAAA;AAAR,SAAd;AACD;;AAED,YAAMO,MAAN,CAAaW,MAAM,CAACC,MAAP,CAAcX,MAAd,EAAsB;AAACY,QAAAA,YAAY,EAAEX;AAAf,OAAtB,CAAb;AACD,KAlBW,CAAd;AAoBD;;AAEDY,EAAAA,mBAAmB,CAACC,KAAD,EAAQC,OAAR,EAAiBC,WAAjB,EAA8B;AAC/C,UAAMC,gBAAgB,GAAGP,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACQ,MAAP,CAAcJ,KAAK,CAACzB,KAApB,CAAd,EAA0C;AACjEiB,MAAAA,QAAQ,EAAEQ,KAAK,CAACK,OAAN,CAAcb,QADyC;AAEjEc,MAAAA,aAAa,EAAE,CAFkD;AAGjEC,MAAAA,eAAe,EAAE,IAHgD;AAIjEC,MAAAA,gBAAgB,EAAErC,gBAAgB,CAAC,KAAKG,EAAN;AAJ+B,KAA1C,CAAzB;AAOAsB,IAAAA,MAAM,CAACC,MAAP,CAAcM,gBAAd,EAAgCD,WAAhC;AACA,WAAOC,gBAAP;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACP,QAAI,KAAK3B,GAAT,EAAc;AACZ,WAAKA,GAAL,CAAS2B,MAAT;AACA,WAAK3B,GAAL,GAAW,IAAX;AACD;;AAED,QAAI,KAAKN,SAAT,EAAoB;AAClB,WAAKA,SAAL,CAAeiC,MAAf;AACA,WAAKjC,SAAL,GAAiB,IAAjB;AACD;;AAED,QAAI,KAAKI,WAAT,EAAsB;AACpB,WAAKA,WAAL,CAAiB6B,MAAjB;AACA,WAAK7B,WAAL,GAAmB,IAAnB;AACD;AACF;;AAtFgD","sourcesContent":["import {default as LayersPass} from './layers-pass';\nimport {\n  Framebuffer,\n  Texture2D,\n  Renderbuffer,\n  withParameters,\n  cssToDeviceRatio\n} from '@luma.gl/core';\n\nexport default class ShadowPass extends LayersPass {\n  constructor(gl, props) {\n    super(gl, props);\n\n    // The shadowMap texture\n    this.shadowMap = new Texture2D(gl, {\n      width: 1,\n      height: 1,\n      parameters: {\n        [gl.TEXTURE_MIN_FILTER]: gl.LINEAR,\n        [gl.TEXTURE_MAG_FILTER]: gl.LINEAR,\n        [gl.TEXTURE_WRAP_S]: gl.CLAMP_TO_EDGE,\n        [gl.TEXTURE_WRAP_T]: gl.CLAMP_TO_EDGE\n      }\n    });\n\n    this.depthBuffer = new Renderbuffer(gl, {\n      format: gl.DEPTH_COMPONENT16,\n      width: 1,\n      height: 1\n    });\n\n    this.fbo = new Framebuffer(gl, {\n      id: 'shadowmap',\n      width: 1,\n      height: 1,\n      attachments: {\n        [gl.COLOR_ATTACHMENT0]: this.shadowMap,\n        // Depth attachment has to be specified for depth test to work\n        [gl.DEPTH_ATTACHMENT]: this.depthBuffer\n      }\n    });\n  }\n\n  render(params) {\n    const target = this.fbo;\n\n    withParameters(\n      this.gl,\n      {\n        depthRange: [0, 1],\n        depthTest: true,\n        blend: false,\n        clearColor: [1, 1, 1, 1]\n      },\n      () => {\n        const viewport = params.viewports[0];\n        const pixelRatio = cssToDeviceRatio(this.gl);\n        const width = viewport.width * pixelRatio;\n        const height = viewport.height * pixelRatio;\n        if (width !== target.width || height !== target.height) {\n          target.resize({width, height});\n        }\n\n        super.render(Object.assign(params, {outputBuffer: target}));\n      }\n    );\n  }\n\n  getModuleParameters(layer, effects, effectProps) {\n    const moduleParameters = Object.assign(Object.create(layer.props), {\n      viewport: layer.context.viewport,\n      pickingActive: 0,\n      drawToShadowMap: true,\n      devicePixelRatio: cssToDeviceRatio(this.gl)\n    });\n\n    Object.assign(moduleParameters, effectProps);\n    return moduleParameters;\n  }\n\n  delete() {\n    if (this.fbo) {\n      this.fbo.delete();\n      this.fbo = null;\n    }\n\n    if (this.shadowMap) {\n      this.shadowMap.delete();\n      this.shadowMap = null;\n    }\n\n    if (this.depthBuffer) {\n      this.depthBuffer.delete();\n      this.depthBuffer = null;\n    }\n  }\n}\n"],"file":"shadow-pass.js"}