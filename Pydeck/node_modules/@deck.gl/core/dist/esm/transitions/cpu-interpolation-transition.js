import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import { lerp } from 'math.gl';
import Transition from './transition';

var CPUInterpolationTransition = function (_Transition) {
  _inherits(CPUInterpolationTransition, _Transition);

  function CPUInterpolationTransition() {
    _classCallCheck(this, CPUInterpolationTransition);

    return _possibleConstructorReturn(this, _getPrototypeOf(CPUInterpolationTransition).apply(this, arguments));
  }

  _createClass(CPUInterpolationTransition, [{
    key: "_onUpdate",
    value: function _onUpdate() {
      var time = this.time,
          _this$settings = this.settings,
          fromValue = _this$settings.fromValue,
          toValue = _this$settings.toValue,
          duration = _this$settings.duration,
          easing = _this$settings.easing;
      var t = easing(time / duration);
      this._value = lerp(fromValue, toValue, t);
    }
  }, {
    key: "value",
    get: function get() {
      return this._value;
    }
  }]);

  return CPUInterpolationTransition;
}(Transition);

export { CPUInterpolationTransition as default };
//# sourceMappingURL=cpu-interpolation-transition.js.map