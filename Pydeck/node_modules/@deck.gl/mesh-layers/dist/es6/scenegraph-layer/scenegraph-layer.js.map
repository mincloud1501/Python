{"version":3,"sources":["../../../src/scenegraph-layer/scenegraph-layer.js"],"names":["Layer","ScenegraphNode","isWebGL2","pbr","log","createGLTFObjects","waitForGLTFAssets","MATRIX_ATTRIBUTES","vs","fs","DEFAULT_COLOR","defaultProps","scenegraph","type","value","async","getScene","gltf","scenes","scene","getAnimator","animator","_animations","sizeScale","min","getPosition","x","position","getColor","opacity","max","_lighting","_composeModelMatrix","_imageBasedLightingEnvironment","getOrientation","getScale","getTranslation","getTransformMatrix","ScenegraphLayer","initializeState","attributeManager","getAttributeManager","addInstanced","instancePositions","size","fp64","use64bitPositions","accessor","transition","instanceColors","props","colorFormat","length","normalized","defaultValue","instanceModelMatrix","updateState","params","oldProps","_updateScenegraph","_applyAnimationsProp","state","finalizeState","_deleteScenegraph","gl","context","scenegraphData","gltfObjects","getLoadOptions","Object","assign","then","setNeedsRedraw","deprecated","options","layer","_applyAllAttributes","setState","warn","attributesAvailable","allAttributes","getAttributes","traverse","model","_setModelAttributes","animationsProp","animations","getAnimations","keys","sort","forEach","key","animation","Number","isFinite","number","findResult","find","name","delete","addVersionToShader","source","modules","push","env","waitForFullLoad","imageBasedLightingEnvironment","modelOptions","isInstanced","useTangents","updateAttributes","changedAttributes","draw","moduleParameters","parameters","animate","animationProps","time","numInstances","getNumInstances","worldMatrix","setInstanceCount","updateModuleSettings","uniforms","enableOffsetModelMatrix","sceneModelMatrix","u_Camera","program","project_uCameraPosition","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Layer} from '@deck.gl/core';\nimport {ScenegraphNode, isWebGL2, pbr, log} from '@luma.gl/core';\nimport {createGLTFObjects} from '@luma.gl/addons';\nimport GL from '@luma.gl/constants';\nimport {waitForGLTFAssets} from './gltf-utils';\n\nimport {MATRIX_ATTRIBUTES} from '../utils/matrix';\n\nimport vs from './scenegraph-layer-vertex.glsl';\nimport fs from './scenegraph-layer-fragment.glsl';\n\nconst DEFAULT_COLOR = [255, 255, 255, 255];\n\nconst defaultProps = {\n  scenegraph: {type: 'object', value: null, async: true},\n  getScene: gltf => {\n    if (gltf && gltf.scenes) {\n      // gltf post processor replaces `gltf.scene` number with the scene `object`\n      return typeof gltf.scene === 'object' ? gltf.scene : gltf.scenes[gltf.scene || 0];\n    }\n    return gltf;\n  },\n  getAnimator: scenegraph => scenegraph && scenegraph.animator,\n  _animations: null,\n\n  sizeScale: {type: 'number', value: 1, min: 0},\n  getPosition: {type: 'accessor', value: x => x.position},\n  getColor: {type: 'accessor', value: DEFAULT_COLOR},\n  opacity: {type: 'number', min: 0, max: 1, value: 1.0},\n\n  // flat or pbr\n  _lighting: 'flat',\n  _composeModelMatrix: false,\n  // _lighting must be pbr for this to work\n  _imageBasedLightingEnvironment: null,\n\n  // yaw, pitch and roll are in degrees\n  // https://en.wikipedia.org/wiki/Euler_angles\n  // [pitch, yaw, roll]\n  getOrientation: {type: 'accessor', value: [0, 0, 0]},\n  getScale: {type: 'accessor', value: [1, 1, 1]},\n  getTranslation: {type: 'accessor', value: [0, 0, 0]},\n  // 4x4 matrix\n  getTransformMatrix: {type: 'accessor', value: []}\n};\n\nexport default class ScenegraphLayer extends Layer {\n  initializeState() {\n    const attributeManager = this.getAttributeManager();\n    attributeManager.addInstanced({\n      instancePositions: {\n        size: 3,\n        type: GL.DOUBLE,\n        fp64: this.use64bitPositions(),\n        accessor: 'getPosition',\n        transition: true\n      },\n      instanceColors: {\n        type: GL.UNSIGNED_BYTE,\n        size: this.props.colorFormat.length,\n        accessor: 'getColor',\n        normalized: true,\n        defaultValue: DEFAULT_COLOR,\n        transition: true\n      },\n      instanceModelMatrix: MATRIX_ATTRIBUTES\n    });\n  }\n\n  updateState(params) {\n    super.updateState(params);\n    const {props, oldProps} = params;\n\n    if (props.scenegraph !== oldProps.scenegraph) {\n      this._updateScenegraph(props);\n    } else if (props._animations !== oldProps._animations) {\n      this._applyAnimationsProp(this.state.scenegraph, this.state.animator, props._animations);\n    }\n  }\n\n  finalizeState() {\n    super.finalizeState();\n    this._deleteScenegraph();\n  }\n\n  _updateScenegraph(props) {\n    const {gl} = this.context;\n    let scenegraphData;\n    if (props.scenegraph instanceof ScenegraphNode) {\n      // Signature 1: props.scenegraph is a proper luma.gl Scenegraph\n      scenegraphData = {scenes: [props.scenegraph]};\n    } else if (props.scenegraph && !props.scenegraph.gltf) {\n      // Converts loaders.gl gltf to luma.gl scenegraph using the undocumented @luma.gl/addons function\n      const gltf = props.scenegraph;\n      const gltfObjects = createGLTFObjects(gl, gltf, this.getLoadOptions());\n      scenegraphData = Object.assign({gltf}, gltfObjects);\n\n      waitForGLTFAssets(gltfObjects).then(() => this.setNeedsRedraw());\n    } else {\n      // DEPRECATED PATH: Assumes this data was loaded through GLTFScenegraphLoader\n      log.deprecated(\n        'ScenegraphLayer.props.scenegraph',\n        'Use GLTFLoader instead of GLTFScenegraphLoader'\n      );\n      scenegraphData = props.scenegraph;\n    }\n\n    const options = {layer: this, gl};\n    const scenegraph = props.getScene(scenegraphData, options);\n    const animator = props.getAnimator(scenegraphData, options);\n\n    if (scenegraph instanceof ScenegraphNode) {\n      this._deleteScenegraph();\n      this._applyAllAttributes(scenegraph);\n      this._applyAnimationsProp(scenegraph, animator, props._animations);\n      this.setState({scenegraph, animator});\n    } else if (scenegraph !== null) {\n      log.warn('invalid scenegraph:', scenegraph)();\n    }\n  }\n\n  _applyAllAttributes(scenegraph) {\n    if (this.state.attributesAvailable) {\n      const allAttributes = this.getAttributeManager().getAttributes();\n      scenegraph.traverse(model => {\n        this._setModelAttributes(model.model, allAttributes);\n      });\n    }\n  }\n\n  _applyAnimationsProp(scenegraph, animator, animationsProp) {\n    if (!scenegraph || !animator || !animationsProp) {\n      return;\n    }\n\n    const animations = animator.getAnimations();\n\n    // sort() to ensure '*' comes first so that other values can override\n    Object.keys(animationsProp)\n      .sort()\n      .forEach(key => {\n        // Key can be:\n        //  - number for index number\n        //  - name for animation name\n        //  - * to affect all animations\n        const value = animationsProp[key];\n\n        if (key === '*') {\n          animations.forEach(animation => {\n            Object.assign(animation, value);\n          });\n        } else if (Number.isFinite(Number(key))) {\n          const number = Number(key);\n          if (number >= 0 && number < animations.length) {\n            Object.assign(animations[number], value);\n          } else {\n            log.warn(`animation ${key} not found`)();\n          }\n        } else {\n          const findResult = animations.find(({name}) => name === key);\n          if (findResult) {\n            Object.assign(findResult, value);\n          } else {\n            log.warn(`animation ${key} not found`)();\n          }\n        }\n      });\n  }\n\n  _deleteScenegraph() {\n    const {scenegraph} = this.state;\n    if (scenegraph instanceof ScenegraphNode) {\n      scenegraph.delete();\n    }\n  }\n\n  addVersionToShader(source) {\n    if (isWebGL2(this.context.gl)) {\n      return `#version 300 es\\n${source}`;\n    }\n\n    return source;\n  }\n\n  getLoadOptions() {\n    const modules = ['project32', 'picking'];\n    const {_lighting, _imageBasedLightingEnvironment} = this.props;\n\n    if (_lighting === 'pbr') {\n      modules.push(pbr);\n    }\n\n    let env = null;\n    if (_imageBasedLightingEnvironment) {\n      if (typeof _imageBasedLightingEnvironment === 'function') {\n        env = _imageBasedLightingEnvironment({gl: this.context.gl, layer: this});\n      } else {\n        env = _imageBasedLightingEnvironment;\n      }\n    }\n\n    return {\n      gl: this.context.gl,\n      waitForFullLoad: true,\n      imageBasedLightingEnvironment: env,\n      modelOptions: {\n        vs: this.addVersionToShader(vs),\n        fs: this.addVersionToShader(fs),\n        modules,\n        isInstanced: true\n      },\n      // tangents are not supported\n      useTangents: false\n    };\n  }\n\n  updateAttributes(changedAttributes) {\n    this.setState({attributesAvailable: true});\n    if (!this.state.scenegraph) return;\n\n    this.state.scenegraph.traverse(model => {\n      this._setModelAttributes(model.model, changedAttributes);\n    });\n  }\n\n  draw({moduleParameters = null, parameters = {}, context}) {\n    if (!this.state.scenegraph) return;\n\n    if (this.props._animations && this.state.animator) {\n      this.state.animator.animate(context.animationProps.time);\n    }\n\n    const {sizeScale, opacity, _composeModelMatrix} = this.props;\n    const numInstances = this.getNumInstances();\n    this.state.scenegraph.traverse((model, {worldMatrix}) => {\n      model.model.setInstanceCount(numInstances);\n      model.updateModuleSettings(moduleParameters);\n      model.draw({\n        parameters,\n        uniforms: {\n          sizeScale,\n          opacity,\n          enableOffsetModelMatrix: _composeModelMatrix,\n          sceneModelMatrix: worldMatrix,\n          // Needed for PBR (TODO: find better way to get it)\n          u_Camera: model.model.program.uniforms.project_uCameraPosition\n        }\n      });\n    });\n  }\n}\n\nScenegraphLayer.layerName = 'ScenegraphLayer';\nScenegraphLayer.defaultProps = defaultProps;\n"],"file":"scenegraph-layer.js"}