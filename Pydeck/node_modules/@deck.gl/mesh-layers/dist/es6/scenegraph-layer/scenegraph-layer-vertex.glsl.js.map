{"version":3,"sources":["../../../src/scenegraph-layer/scenegraph-layer-vertex.glsl.js"],"names":[],"mappings":"AAAA","sourcesContent":["export default `\\\n#if (__VERSION__ < 300)\n  #define _attribute attribute\n  #define _varying varying\n#else\n  #define _attribute in\n#define _varying out\n#endif\n\n// Instance attributes\n_attribute vec3 instancePositions;\n_attribute vec2 instancePositions64xyLow;\n_attribute vec4 instanceColors;\n_attribute vec3 instancePickingColors;\n_attribute mat3 instanceModelMatrix;\n_attribute vec3 instanceTranslation;\n\n// Uniforms\nuniform float sizeScale;\nuniform mat4 sceneModelMatrix;\nuniform bool enableOffsetModelMatrix;\n\n// Attributes\n_attribute vec4 POSITION;\n\n#ifdef HAS_UV\n  _attribute vec2 TEXCOORD_0;\n#endif\n\n#ifdef MODULE_PBR\n  #ifdef HAS_NORMALS\n    _attribute vec4 NORMAL;\n  #endif\n#endif\n\n// Varying\n_varying vec4 vColor;\n\n// MODULE_PBR contains all the varying definitions needed\n#ifndef MODULE_PBR\n  #ifdef HAS_UV\n    _varying vec2 vTEXCOORD_0;\n  #endif\n#endif\n\n// Main\nvoid main(void) {\n  #if defined(HAS_UV) && !defined(MODULE_PBR)\n    vTEXCOORD_0 = TEXCOORD_0;\n    geometry.uv = vTEXCOORD_0;\n  #endif\n\n  geometry.worldPosition = instancePositions;\n\n  #ifdef MODULE_PBR\n    // set PBR data\n    #ifdef HAS_NORMALS\n      pbr_vNormal = project_normal(instanceModelMatrix * (sceneModelMatrix * vec4(NORMAL.xyz, 0.0)).xyz);\n      geometry.normal = pbr_vNormal;\n    #endif\n\n    #ifdef HAS_UV\n      pbr_vUV = TEXCOORD_0;\n    #else\n      pbr_vUV = vec2(0., 0.);\n    #endif    \n    geometry.uv = pbr_vUV;\n  #endif\n\n  vec3 pos = (instanceModelMatrix * (sceneModelMatrix * POSITION).xyz) * sizeScale + instanceTranslation;\n\n  if(enableOffsetModelMatrix) {\n    DECKGL_FILTER_SIZE(pos, geometry);\n    gl_Position = project_position_to_clipspace(pos + instancePositions, instancePositions64xyLow, vec3(0.0), geometry.position);\n  }\n  else {\n    pos = project_size(pos);\n    DECKGL_FILTER_SIZE(pos, geometry);\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64xyLow, pos, geometry.position);\n  }\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  #ifdef MODULE_PBR\n    // set PBR data\n    pbr_vPosition = geometry.position.xyz;\n  #endif\n\n  vColor = instanceColors;\n  DECKGL_FILTER_COLOR(vColor, geometry);\n\n  picking_setPickingColor(instancePickingColors);\n}\n`;\n"],"file":"scenegraph-layer-vertex.glsl.js"}