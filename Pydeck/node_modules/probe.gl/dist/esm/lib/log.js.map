{"version":3,"sources":["../../../src/lib/log.js"],"names":["VERSION","isBrowser","LocalStorage","formatImage","formatTime","leftPad","addColor","autobind","assert","getHiResTimestamp","originalConsole","debug","console","log","info","warn","error","DEFAULT_SETTINGS","enabled","priority","noop","cache","getTableHeader","table","key","title","Log","id","_startTs","_deltaTs","LOG_THROTTLE_TIMEOUT","_storage","userData","timeStamp","Object","seal","config","Number","toPrecision","updateConfiguration","level","condition","message","args","_getLogFunction","method","once","oldUsage","newUsage","time","columns","tag","image","scale","getPriority","_logImageInBrowser","_logImageInNode","setting","value","asciify","module","require","fit","width","Math","round","then","data","img","Image","onload","src","element","nodeName","toLowerCase","toDataURL","timeEnd","opts","collapsed","_normalizeArguments","groupCollapsed","group","assign","groupEnd","func","trace","_normalizePriority","isEnabled","total","getTotal","delta","getDelta","_shouldLog","_parseArguments","_decorateMessage","bind","options","normOpts","_getElapsedTime","resolvedPriority","isFinite","newOpts","undefined","unshift","color","background","newPriority"],"mappings":"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","sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint-disable no-console, no-try-catch */\n/* global console */\nimport {VERSION, isBrowser} from '../utils/globals';\nimport LocalStorage from '../utils/local-storage';\nimport {formatImage, formatTime, leftPad} from '../utils/formatters';\nimport {addColor} from '../utils/color';\nimport {autobind} from '../utils/autobind';\nimport assert from '../utils/assert';\nimport getHiResTimestamp from '../utils/hi-res-timestamp';\n\n/* eslint-disable no-console */\n/* global console, Image */\n\n// Instrumentation in other packages may override console methods, so preserve them here\nconst originalConsole = {\n  debug: isBrowser ? console.debug || console.log : console.log,\n  log: console.log,\n  info: console.info,\n  warn: console.warn,\n  error: console.error\n};\n\nconst DEFAULT_SETTINGS = {\n  enabled: false,\n  priority: 0\n};\n\nfunction noop() {}\n\nconst cache = {};\n\n/*\nfunction throttle(tag, timeout) {\n  const prevTime = cache[tag];\n  const time = Date.now();\n  if (!prevTime || (time - prevTime > timeout)) {\n    cache[tag] = time;\n    return true;\n  }\n  return false;\n}\n\n// Assertions don't generate standard exceptions and don't print nicely\nfunction checkForAssertionErrors(args) {\n  const isAssertion =\n    args &&\n    args.length > 0 &&\n    typeof args[0] === 'object' &&\n    args[0] !== null &&\n    args[0].name === 'AssertionError';\n\n  if (isAssertion) {\n    args = Array.prototype.slice.call(args);\n    args.unshift(`assert(${args[0].message})`);\n  }\n  return args;\n}\n*/\n\nfunction getTableHeader(table) {\n  for (const key in table) {\n    for (const title in table[key]) {\n      return title || 'untitled';\n    }\n  }\n  return 'empty';\n}\n\n// A console wrapper\n\nexport default class Log {\n  constructor({id} = {}) {\n    this.id = id;\n    this.VERSION = VERSION;\n    this._startTs = getHiResTimestamp();\n    this._deltaTs = getHiResTimestamp();\n    // TODO - fix support from throttling groups\n    this.LOG_THROTTLE_TIMEOUT = 0; // Time before throttled messages are logged again\n    this._storage = new LocalStorage(`__probe-${this.id}__`, DEFAULT_SETTINGS);\n    this.userData = {};\n\n    this.timeStamp(`${this.id} started`);\n\n    autobind(this);\n    Object.seal(this);\n  }\n\n  set priority(newPriority) {\n    this._storage.updateConfiguration({priority: newPriority});\n    return this;\n  }\n\n  get priority() {\n    return this._storage.config.priority;\n  }\n\n  isEnabled() {\n    return this._storage.config.enabled;\n  }\n\n  getPriority() {\n    return this._storage.config.priority;\n  }\n\n  getLevel() {\n    return this._storage.config.priority;\n  }\n\n  // @return {Number} milliseconds, with fractions\n  getTotal() {\n    return Number((getHiResTimestamp() - this._startTs).toPrecision(10));\n  }\n\n  // @return {Number} milliseconds, with fractions\n  getDelta() {\n    return Number((getHiResTimestamp() - this._deltaTs).toPrecision(10));\n  }\n\n  // Configure\n\n  enable(enabled = true) {\n    this._storage.updateConfiguration({enabled});\n    return this;\n  }\n\n  setLevel(level) {\n    this._storage.updateConfiguration({priority: level});\n    return this;\n  }\n\n  // Unconditional logging\n\n  assert(condition, message) {\n    assert(condition, message);\n  }\n\n  // Warn, but only once, no console flooding\n  warn(message, ...args) {\n    return this._getLogFunction({\n      message,\n      args,\n      method: originalConsole.warn,\n      once: true\n    });\n  }\n\n  // Print an error\n  error(message, ...args) {\n    return this._getLogFunction({message, args, method: originalConsole.error});\n  }\n\n  deprecated(oldUsage, newUsage) {\n    return this.warn(`\\`${oldUsage}\\` is deprecated and will be removed \\\nin a later version. Use \\`${newUsage}\\` instead`);\n  }\n\n  removed(oldUsage, newUsage) {\n    return this.error(`\\`${oldUsage}\\` has been removed. Use \\`${newUsage}\\` instead`);\n  }\n\n  // Conditional logging\n\n  // Log to a group\n  probe(priority, message, ...args) {\n    return this._getLogFunction({\n      priority,\n      message,\n      args,\n      method: originalConsole.log,\n      time: true,\n      once: true\n    });\n  }\n\n  // Log a debug message\n  log(priority, message, ...args) {\n    return this._getLogFunction({\n      priority,\n      message,\n      args,\n      method: originalConsole.debug\n    });\n  }\n\n  // Log a normal message\n  info(priority, message, ...args) {\n    return this._getLogFunction({\n      priority,\n      message,\n      args,\n      method: console.info\n    });\n  }\n\n  // Log a normal message, but only once, no console flooding\n  once(priority, message, ...args) {\n    return this._getLogFunction({\n      priority,\n      message,\n      args,\n      method: originalConsole.debug || originalConsole.info,\n      once: true\n    });\n  }\n\n  // Logs an object as a table\n  table(priority, table, columns) {\n    if (table) {\n      const tag = getTableHeader(table);\n      return this._getLogFunction({\n        priority,\n        message: table,\n        args: columns && [columns],\n        tag,\n        method: console.table || noop\n      });\n    }\n    return noop;\n  }\n\n  // logs an image under Chrome\n  image({priority, image, message = '', scale = 1}) {\n    if (priority > this.getPriority()) {\n      return noop;\n    }\n    return isBrowser\n      ? this._logImageInBrowser({image, message, scale})\n      : this._logImageInNode({image, message, scale});\n  }\n\n  // Logs the current settings as a table\n  settings() {\n    if (console.table) {\n      console.table(this._storage.config);\n    } else {\n      console.log(this._storage.config);\n    }\n  }\n\n  // logs the current status of the setting\n  get(setting) {\n    return this._storage.config[setting];\n  }\n\n  // update the status of the setting\n  set(setting, value) {\n    this._storage.updateConfiguration({[setting]: value});\n  }\n\n  // Use the asciify module to log an image under node.js\n  _logImageInNode({image, message = '', scale = 1}) {\n    // Note: Runtime load of the \"asciify-image\" module, avoids including in browser bundles\n    let asciify = null;\n    try {\n      asciify = module.require('asciify-image');\n    } catch (error) {\n      // asciify not installed, silently ignore\n    }\n    if (asciify) {\n      return () =>\n        asciify(image, {fit: 'box', width: `${Math.round(80 * scale)}%`}).then(data =>\n          console.log(data)\n        );\n    }\n    return noop;\n  }\n\n  _logImageInBrowser({image, message = '', scale = 1}) {\n    if (typeof image === 'string') {\n      const img = new Image();\n      img.onload = () => {\n        const args = formatImage(img, message, scale);\n        console.log(...args);\n      };\n      img.src = image;\n      return noop;\n    }\n    const element = image.nodeName || '';\n    if (element.toLowerCase() === 'img') {\n      console.log(...formatImage(image, message, scale));\n      return noop;\n    }\n    if (element.toLowerCase() === 'canvas') {\n      const img = new Image();\n      img.onload = () => console.log(...formatImage(img, message, scale));\n      img.src = image.toDataURL();\n      return noop;\n    }\n    return noop;\n  }\n\n  time(priority, message) {\n    return this._getLogFunction({\n      priority,\n      message,\n      method: console.time ? console.time : console.info\n    });\n  }\n\n  timeEnd(priority, message) {\n    return this._getLogFunction({\n      priority,\n      message,\n      method: console.timeEnd ? console.timeEnd : console.info\n    });\n  }\n\n  timeStamp(priority, message) {\n    return this._getLogFunction({\n      priority,\n      message,\n      method: console.timeStamp || noop\n    });\n  }\n\n  group(priority, message, opts = {collapsed: false}) {\n    opts = this._normalizeArguments({priority, message, opts});\n    const {collapsed} = opts;\n    return this._getLogFunction({\n      priority,\n      message,\n      opts,\n      method: (collapsed ? console.groupCollapsed : console.group) || console.info\n    });\n  }\n\n  groupCollapsed(priority, message, opts = {}) {\n    return this.group(priority, message, Object.assign({}, opts, {collapsed: true}));\n  }\n\n  groupEnd(priority) {\n    return this._getLogFunction({\n      priority,\n      message: '',\n      method: console.groupEnd || noop\n    });\n  }\n\n  // EXPERIMENTAL\n\n  withGroup(priority, message, func) {\n    const opts = this._normalizeArguments({\n      priority,\n      message\n    });\n\n    this.group(opts);\n\n    try {\n      func();\n    } finally {\n      this.groupEnd(opts.message);\n    }\n  }\n\n  trace() {\n    if (console.trace) {\n      console.trace();\n    }\n  }\n\n  // PRIVATE METHODS\n\n  _shouldLog(priority) {\n    priority = this._normalizePriority(priority);\n    return priority === 0 || (this.isEnabled() && this.getPriority() >= priority);\n  }\n\n  _getElapsedTime() {\n    const total = this.getTotal();\n    const delta = this.getDelta();\n    // reset delta timer\n    this._deltaTs = getHiResTimestamp();\n    return {total, delta};\n  }\n\n  _getLogFunction(opts) {\n    if (this._shouldLog(opts.priority)) {\n      const {method} = opts;\n\n      opts = this._parseArguments(opts);\n\n      assert(method);\n\n      let {message} = opts;\n      const tag = opts.tag || opts.message;\n\n      if (opts.once) {\n        if (!cache[tag]) {\n          cache[tag] = getHiResTimestamp();\n        } else {\n          return noop;\n        }\n      }\n\n      // TODO - Make throttling work with groups\n      // if (opts.nothrottle || !throttle(tag, this.LOG_THROTTLE_TIMEOUT)) {\n      //   return noop;\n      // }\n\n      message = this._decorateMessage(message, opts);\n\n      // Bind console function so that it can be called after being returned\n      return method.bind(console, message, ...opts.args);\n    }\n\n    return noop;\n  }\n\n  _parseArguments(options) {\n    const normOpts = this._normalizeArguments(options);\n\n    const {delta, total} = this._getElapsedTime();\n\n    // normalized opts + timings\n    return Object.assign(options, normOpts, {\n      delta,\n      total\n    });\n  }\n\n  // Get priority from first argument:\n  // - log(priority, message, args) => priority\n  // - log(message, args) => 0\n  // - log({priority, ...}, message, args) => priority\n  // - log({priority, message, args}) => priority\n  _normalizePriority(priority) {\n    let resolvedPriority;\n\n    switch (typeof priority) {\n      case 'number':\n        resolvedPriority = priority;\n        break;\n\n      case 'object':\n        resolvedPriority = priority.priority || 0;\n        break;\n\n      default:\n        resolvedPriority = 0;\n    }\n    // 'log priority must be a number'\n    assert(Number.isFinite(resolvedPriority) && resolvedPriority >= 0);\n\n    return resolvedPriority;\n  }\n\n  // \"Normalizes\" the various argument patterns into an object with known types\n  // - log(priority, message, args) => {priority, message, args}\n  // - log(message, args) => {priority: 0, message, args}\n  // - log({priority, ...}, message, args) => {priority, message, args}\n  // - log({priority, message, args}) => {priority, message, args}\n  _normalizeArguments({priority, message, args = [], opts}) {\n    const newOpts = {\n      priority: this._normalizePriority(priority),\n      message,\n      args\n    };\n\n    switch (typeof priority) {\n      case 'string':\n      case 'function':\n        if (message !== undefined) {\n          args.unshift(message);\n        }\n        Object.assign(newOpts, {message: priority});\n        break;\n\n      case 'object':\n        Object.assign(newOpts, priority);\n        break;\n\n      default:\n    }\n\n    // Resolve functions into strings by calling them\n    if (typeof newOpts.message === 'function') {\n      newOpts.message = this._shouldLog(newOpts.priority) ? newOpts.message() : '';\n    }\n    // 'log message must be a string' or object\n    assert(typeof newOpts.message === 'string' || typeof newOpts.message === 'object');\n\n    // original opts + normalized opts + opts arg + fixed up message\n    return Object.assign(newOpts, opts);\n  }\n\n  _decorateMessage(message, opts) {\n    if (typeof message === 'string') {\n      let time = '';\n      if (opts.time) {\n        const {total} = this._getElapsedTime();\n        time = leftPad(formatTime(total));\n      }\n      message = opts.time ? `${this.id}: ${time}  ${message}` : `${this.id}: ${message}`;\n      message = addColor(message, opts.color, opts.background);\n    }\n    return message;\n  }\n}\n\nLog.VERSION = VERSION;\n"],"file":"log.js"}