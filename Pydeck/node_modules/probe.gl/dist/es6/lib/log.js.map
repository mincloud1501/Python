{"version":3,"sources":["../../../src/lib/log.js"],"names":["VERSION","isBrowser","LocalStorage","formatImage","formatTime","leftPad","addColor","autobind","assert","getHiResTimestamp","originalConsole","debug","console","log","info","warn","error","DEFAULT_SETTINGS","enabled","priority","noop","cache","getTableHeader","table","key","title","Log","constructor","id","_startTs","_deltaTs","LOG_THROTTLE_TIMEOUT","_storage","userData","timeStamp","Object","seal","newPriority","updateConfiguration","config","isEnabled","getPriority","getLevel","getTotal","Number","toPrecision","getDelta","enable","setLevel","level","condition","message","args","_getLogFunction","method","once","deprecated","oldUsage","newUsage","removed","probe","time","columns","tag","image","scale","_logImageInBrowser","_logImageInNode","settings","get","setting","set","value","asciify","module","require","fit","width","Math","round","then","data","img","Image","onload","src","element","nodeName","toLowerCase","toDataURL","timeEnd","group","opts","collapsed","_normalizeArguments","groupCollapsed","assign","groupEnd","withGroup","func","trace","_shouldLog","_normalizePriority","_getElapsedTime","total","delta","_parseArguments","_decorateMessage","bind","options","normOpts","resolvedPriority","isFinite","newOpts","undefined","unshift","color","background"],"mappings":"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","sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint-disable no-console, no-try-catch */\n/* global console */\nimport {VERSION, isBrowser} from '../utils/globals';\nimport LocalStorage from '../utils/local-storage';\nimport {formatImage, formatTime, leftPad} from '../utils/formatters';\nimport {addColor} from '../utils/color';\nimport {autobind} from '../utils/autobind';\nimport assert from '../utils/assert';\nimport getHiResTimestamp from '../utils/hi-res-timestamp';\n\n/* eslint-disable no-console */\n/* global console, Image */\n\n// Instrumentation in other packages may override console methods, so preserve them here\nconst originalConsole = {\n  debug: isBrowser ? console.debug || console.log : console.log,\n  log: console.log,\n  info: console.info,\n  warn: console.warn,\n  error: console.error\n};\n\nconst DEFAULT_SETTINGS = {\n  enabled: false,\n  priority: 0\n};\n\nfunction noop() {}\n\nconst cache = {};\n\n/*\nfunction throttle(tag, timeout) {\n  const prevTime = cache[tag];\n  const time = Date.now();\n  if (!prevTime || (time - prevTime > timeout)) {\n    cache[tag] = time;\n    return true;\n  }\n  return false;\n}\n\n// Assertions don't generate standard exceptions and don't print nicely\nfunction checkForAssertionErrors(args) {\n  const isAssertion =\n    args &&\n    args.length > 0 &&\n    typeof args[0] === 'object' &&\n    args[0] !== null &&\n    args[0].name === 'AssertionError';\n\n  if (isAssertion) {\n    args = Array.prototype.slice.call(args);\n    args.unshift(`assert(${args[0].message})`);\n  }\n  return args;\n}\n*/\n\nfunction getTableHeader(table) {\n  for (const key in table) {\n    for (const title in table[key]) {\n      return title || 'untitled';\n    }\n  }\n  return 'empty';\n}\n\n// A console wrapper\n\nexport default class Log {\n  constructor({id} = {}) {\n    this.id = id;\n    this.VERSION = VERSION;\n    this._startTs = getHiResTimestamp();\n    this._deltaTs = getHiResTimestamp();\n    // TODO - fix support from throttling groups\n    this.LOG_THROTTLE_TIMEOUT = 0; // Time before throttled messages are logged again\n    this._storage = new LocalStorage(`__probe-${this.id}__`, DEFAULT_SETTINGS);\n    this.userData = {};\n\n    this.timeStamp(`${this.id} started`);\n\n    autobind(this);\n    Object.seal(this);\n  }\n\n  set priority(newPriority) {\n    this._storage.updateConfiguration({priority: newPriority});\n    return this;\n  }\n\n  get priority() {\n    return this._storage.config.priority;\n  }\n\n  isEnabled() {\n    return this._storage.config.enabled;\n  }\n\n  getPriority() {\n    return this._storage.config.priority;\n  }\n\n  getLevel() {\n    return this._storage.config.priority;\n  }\n\n  // @return {Number} milliseconds, with fractions\n  getTotal() {\n    return Number((getHiResTimestamp() - this._startTs).toPrecision(10));\n  }\n\n  // @return {Number} milliseconds, with fractions\n  getDelta() {\n    return Number((getHiResTimestamp() - this._deltaTs).toPrecision(10));\n  }\n\n  // Configure\n\n  enable(enabled = true) {\n    this._storage.updateConfiguration({enabled});\n    return this;\n  }\n\n  setLevel(level) {\n    this._storage.updateConfiguration({priority: level});\n    return this;\n  }\n\n  // Unconditional logging\n\n  assert(condition, message) {\n    assert(condition, message);\n  }\n\n  // Warn, but only once, no console flooding\n  warn(message, ...args) {\n    return this._getLogFunction({\n      message,\n      args,\n      method: originalConsole.warn,\n      once: true\n    });\n  }\n\n  // Print an error\n  error(message, ...args) {\n    return this._getLogFunction({message, args, method: originalConsole.error});\n  }\n\n  deprecated(oldUsage, newUsage) {\n    return this.warn(`\\`${oldUsage}\\` is deprecated and will be removed \\\nin a later version. Use \\`${newUsage}\\` instead`);\n  }\n\n  removed(oldUsage, newUsage) {\n    return this.error(`\\`${oldUsage}\\` has been removed. Use \\`${newUsage}\\` instead`);\n  }\n\n  // Conditional logging\n\n  // Log to a group\n  probe(priority, message, ...args) {\n    return this._getLogFunction({\n      priority,\n      message,\n      args,\n      method: originalConsole.log,\n      time: true,\n      once: true\n    });\n  }\n\n  // Log a debug message\n  log(priority, message, ...args) {\n    return this._getLogFunction({\n      priority,\n      message,\n      args,\n      method: originalConsole.debug\n    });\n  }\n\n  // Log a normal message\n  info(priority, message, ...args) {\n    return this._getLogFunction({\n      priority,\n      message,\n      args,\n      method: console.info\n    });\n  }\n\n  // Log a normal message, but only once, no console flooding\n  once(priority, message, ...args) {\n    return this._getLogFunction({\n      priority,\n      message,\n      args,\n      method: originalConsole.debug || originalConsole.info,\n      once: true\n    });\n  }\n\n  // Logs an object as a table\n  table(priority, table, columns) {\n    if (table) {\n      const tag = getTableHeader(table);\n      return this._getLogFunction({\n        priority,\n        message: table,\n        args: columns && [columns],\n        tag,\n        method: console.table || noop\n      });\n    }\n    return noop;\n  }\n\n  // logs an image under Chrome\n  image({priority, image, message = '', scale = 1}) {\n    if (priority > this.getPriority()) {\n      return noop;\n    }\n    return isBrowser\n      ? this._logImageInBrowser({image, message, scale})\n      : this._logImageInNode({image, message, scale});\n  }\n\n  // Logs the current settings as a table\n  settings() {\n    if (console.table) {\n      console.table(this._storage.config);\n    } else {\n      console.log(this._storage.config);\n    }\n  }\n\n  // logs the current status of the setting\n  get(setting) {\n    return this._storage.config[setting];\n  }\n\n  // update the status of the setting\n  set(setting, value) {\n    this._storage.updateConfiguration({[setting]: value});\n  }\n\n  // Use the asciify module to log an image under node.js\n  _logImageInNode({image, message = '', scale = 1}) {\n    // Note: Runtime load of the \"asciify-image\" module, avoids including in browser bundles\n    let asciify = null;\n    try {\n      asciify = module.require('asciify-image');\n    } catch (error) {\n      // asciify not installed, silently ignore\n    }\n    if (asciify) {\n      return () =>\n        asciify(image, {fit: 'box', width: `${Math.round(80 * scale)}%`}).then(data =>\n          console.log(data)\n        );\n    }\n    return noop;\n  }\n\n  _logImageInBrowser({image, message = '', scale = 1}) {\n    if (typeof image === 'string') {\n      const img = new Image();\n      img.onload = () => {\n        const args = formatImage(img, message, scale);\n        console.log(...args);\n      };\n      img.src = image;\n      return noop;\n    }\n    const element = image.nodeName || '';\n    if (element.toLowerCase() === 'img') {\n      console.log(...formatImage(image, message, scale));\n      return noop;\n    }\n    if (element.toLowerCase() === 'canvas') {\n      const img = new Image();\n      img.onload = () => console.log(...formatImage(img, message, scale));\n      img.src = image.toDataURL();\n      return noop;\n    }\n    return noop;\n  }\n\n  time(priority, message) {\n    return this._getLogFunction({\n      priority,\n      message,\n      method: console.time ? console.time : console.info\n    });\n  }\n\n  timeEnd(priority, message) {\n    return this._getLogFunction({\n      priority,\n      message,\n      method: console.timeEnd ? console.timeEnd : console.info\n    });\n  }\n\n  timeStamp(priority, message) {\n    return this._getLogFunction({\n      priority,\n      message,\n      method: console.timeStamp || noop\n    });\n  }\n\n  group(priority, message, opts = {collapsed: false}) {\n    opts = this._normalizeArguments({priority, message, opts});\n    const {collapsed} = opts;\n    return this._getLogFunction({\n      priority,\n      message,\n      opts,\n      method: (collapsed ? console.groupCollapsed : console.group) || console.info\n    });\n  }\n\n  groupCollapsed(priority, message, opts = {}) {\n    return this.group(priority, message, Object.assign({}, opts, {collapsed: true}));\n  }\n\n  groupEnd(priority) {\n    return this._getLogFunction({\n      priority,\n      message: '',\n      method: console.groupEnd || noop\n    });\n  }\n\n  // EXPERIMENTAL\n\n  withGroup(priority, message, func) {\n    const opts = this._normalizeArguments({\n      priority,\n      message\n    });\n\n    this.group(opts);\n\n    try {\n      func();\n    } finally {\n      this.groupEnd(opts.message);\n    }\n  }\n\n  trace() {\n    if (console.trace) {\n      console.trace();\n    }\n  }\n\n  // PRIVATE METHODS\n\n  _shouldLog(priority) {\n    priority = this._normalizePriority(priority);\n    return priority === 0 || (this.isEnabled() && this.getPriority() >= priority);\n  }\n\n  _getElapsedTime() {\n    const total = this.getTotal();\n    const delta = this.getDelta();\n    // reset delta timer\n    this._deltaTs = getHiResTimestamp();\n    return {total, delta};\n  }\n\n  _getLogFunction(opts) {\n    if (this._shouldLog(opts.priority)) {\n      const {method} = opts;\n\n      opts = this._parseArguments(opts);\n\n      assert(method);\n\n      let {message} = opts;\n      const tag = opts.tag || opts.message;\n\n      if (opts.once) {\n        if (!cache[tag]) {\n          cache[tag] = getHiResTimestamp();\n        } else {\n          return noop;\n        }\n      }\n\n      // TODO - Make throttling work with groups\n      // if (opts.nothrottle || !throttle(tag, this.LOG_THROTTLE_TIMEOUT)) {\n      //   return noop;\n      // }\n\n      message = this._decorateMessage(message, opts);\n\n      // Bind console function so that it can be called after being returned\n      return method.bind(console, message, ...opts.args);\n    }\n\n    return noop;\n  }\n\n  _parseArguments(options) {\n    const normOpts = this._normalizeArguments(options);\n\n    const {delta, total} = this._getElapsedTime();\n\n    // normalized opts + timings\n    return Object.assign(options, normOpts, {\n      delta,\n      total\n    });\n  }\n\n  // Get priority from first argument:\n  // - log(priority, message, args) => priority\n  // - log(message, args) => 0\n  // - log({priority, ...}, message, args) => priority\n  // - log({priority, message, args}) => priority\n  _normalizePriority(priority) {\n    let resolvedPriority;\n\n    switch (typeof priority) {\n      case 'number':\n        resolvedPriority = priority;\n        break;\n\n      case 'object':\n        resolvedPriority = priority.priority || 0;\n        break;\n\n      default:\n        resolvedPriority = 0;\n    }\n    // 'log priority must be a number'\n    assert(Number.isFinite(resolvedPriority) && resolvedPriority >= 0);\n\n    return resolvedPriority;\n  }\n\n  // \"Normalizes\" the various argument patterns into an object with known types\n  // - log(priority, message, args) => {priority, message, args}\n  // - log(message, args) => {priority: 0, message, args}\n  // - log({priority, ...}, message, args) => {priority, message, args}\n  // - log({priority, message, args}) => {priority, message, args}\n  _normalizeArguments({priority, message, args = [], opts}) {\n    const newOpts = {\n      priority: this._normalizePriority(priority),\n      message,\n      args\n    };\n\n    switch (typeof priority) {\n      case 'string':\n      case 'function':\n        if (message !== undefined) {\n          args.unshift(message);\n        }\n        Object.assign(newOpts, {message: priority});\n        break;\n\n      case 'object':\n        Object.assign(newOpts, priority);\n        break;\n\n      default:\n    }\n\n    // Resolve functions into strings by calling them\n    if (typeof newOpts.message === 'function') {\n      newOpts.message = this._shouldLog(newOpts.priority) ? newOpts.message() : '';\n    }\n    // 'log message must be a string' or object\n    assert(typeof newOpts.message === 'string' || typeof newOpts.message === 'object');\n\n    // original opts + normalized opts + opts arg + fixed up message\n    return Object.assign(newOpts, opts);\n  }\n\n  _decorateMessage(message, opts) {\n    if (typeof message === 'string') {\n      let time = '';\n      if (opts.time) {\n        const {total} = this._getElapsedTime();\n        time = leftPad(formatTime(total));\n      }\n      message = opts.time ? `${this.id}: ${time}  ${message}` : `${this.id}: ${message}`;\n      message = addColor(message, opts.color, opts.background);\n    }\n    return message;\n  }\n}\n\nLog.VERSION = VERSION;\n"],"file":"log.js"}